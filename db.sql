-- MySQL dump 10.13  Distrib 5.6.20, for Win64 (x86_64)
--
-- Host: localhost    Database: paper
-- ------------------------------------------------------
-- Server version	5.6.20

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `knowledge_point`
--

DROP TABLE IF EXISTS `knowledge_point`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `knowledge_point` (
  `k_id` int(11) NOT NULL AUTO_INCREMENT,
  `content` text,
  PRIMARY KEY (`k_id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `knowledge_point`
--

LOCK TABLES `knowledge_point` WRITE;
/*!40000 ALTER TABLE `knowledge_point` DISABLE KEYS */;
INSERT INTO `knowledge_point` VALUES (1,'C++'),(2,'Java'),(3,'C#'),(4,'C语言'),(5,'数据库'),(6,'计算机网络'),(7,'算法'),(8,'数据结构'),(9,'操作系统'),(10,'JSP'),(11,'Linux');
/*!40000 ALTER TABLE `knowledge_point` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `paper`
--

DROP TABLE IF EXISTS `paper`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `paper` (
  `paper_id` int(11) NOT NULL AUTO_INCREMENT,
  `paper_name` varchar(255) DEFAULT NULL,
  `create_time` date DEFAULT NULL,
  `type` varchar(255) DEFAULT NULL,
  `total_score` int(11) DEFAULT NULL,
  `content` text,
  `answer_content` text,
  PRIMARY KEY (`paper_id`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `paper`
--

LOCK TABLES `paper` WRITE;
/*!40000 ALTER TABLE `paper` DISABLE KEYS */;
INSERT INTO `paper` VALUES (7,'南大富士通秋招笔试试卷','2016-07-22','A',10,'&itp&gt南大富士通秋招笔试试卷A卷&it/p&gt&ith5&gt出卷时间：2015/07/22&nbsp;&nbsp;&nbsp;总分：10&it/h5&gt&ith4&gt一.选择题（10*1分）&it/h4&gt&itp style=\"line-height:150%\"&gt1.&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt应用&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gtJohnson&it/span&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gt法则的流水作业调度采用的算法是（&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt）&it/span&gt&it/p&gt&itp style=\"text-indent:32px;line-height:150%\"&gt&itspan style=\"font-size:16px;line-height:150%\"&gtA. &it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt贪心算法&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; B. &it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt分支限界法&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; C.&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt分治法&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D. &it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt动态规划算法&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt2.&itspan style=\"font-size: 19px\"&gt与计算机硬件关系最密切的软件是（&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&it/span&gt&itspan style=\"font-size: 19px\"&gt）&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt.&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.&it/span&gt&itspan style=\"font-size: 19px\"&gt编译程序&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;B.&it/span&gt&itspan style=\"font-size: 19px\"&gt数据库管理程序&it/span&gt&it/p&gt&itp style=\"margin-bottom: 0px;\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; C.&it/span&gt&itspan style=\"font-size: 19px\"&gt游戏程序&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;D.OS&it/span&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt3.&itspan style=\"font-size: 19px\"&gt（&nbsp;&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&it/span&gt&itspan style=\"font-size: 19px\"&gt）不是多道程序系统。&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.&it/span&gt&itspan style=\"font-size: 19px\"&gt单用户单任务&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;B.&it/span&gt&itspan style=\"font-size: 19px\"&gt多道批处理系统&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; C.&it/span&gt&itspan style=\"font-size: 19px\"&gt单用户多任务&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;D.&it/span&gt&itspan style=\"font-size: 19px\"&gt多用户分时系统&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp style=\"line-height: 150%\"&gt4.&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt动态规划算法的基本要素为（）&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gtA. &it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt最优子结构性质与贪心选择性质&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gtB&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt．重叠子问题性质与贪心选择性质&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gtC&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt．最优子结构性质与重叠子问题性质&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 13px;line-height:150%;font-family:楷体_GB2312;display:none\"&gt&nbsp;&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gtD. &it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt预排序与递归调用&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt5.&itspan style=\"font-size: 19px\"&gt（&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt &it/span&gt&itspan style=\"font-size: 19px\"&gt）是多道操作系统不可缺少的硬件支持。&it/span&gt&it/p&gt&itp style=\"margin-bottom: 0px;\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.&it/span&gt&itspan style=\"font-size: 19px\"&gt打印机&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp;&nbsp; B.&it/span&gt&itspan style=\"font-size: 19px\"&gt中断机构&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;C.&it/span&gt&itspan style=\"font-size: 19px\"&gt软盘&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;D.&it/span&gt&itspan style=\"font-size: 19px\"&gt鼠标&it/span&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp style=\"line-height:150%\"&gt6.&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt算法分析中，记号&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gtO&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt表示（&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt），&it/span&gt &itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt记号&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt&itspan style=\"position:relative;top:3px\"&gt&itimg width=\"17\" height=\"17\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/&gt&it/span&gt&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt表示（&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt），&it/span&gt &itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt记号&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt&itspan style=\"position:relative;top:4px\"&gt&itimg width=\"17\" height=\"19\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/&gt&it/span&gt&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt表示（&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt）。&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%\"&gtA.&it/span&gt&itspan style=\"font-size:16px;line-height: 150%;font-family:宋体\"&gt渐进下界&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%\"&gtB.&it/span&gt&itspan style=\"font-size:16px;line-height: 150%;font-family:宋体\"&gt渐进上界&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%\"&gtC.&it/span&gt&itspan style=\"font-size:16px;line-height: 150%;font-family:宋体\"&gt非紧上界&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%\"&gtD.&it/span&gt&itspan style=\"font-size:16px;line-height: 150%;font-family:宋体\"&gt紧渐进界&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%\"&gtE.&it/span&gt&itspan style=\"font-size:16px;line-height: 150%;font-family:宋体\"&gt非紧下界&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp style=\"line-height:150%\"&gt7.&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt以下关于渐进记号的性质是正确的有：（&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt）&it/span&gt&it/p&gt&itp&gt&itspan style=\"font-size:16px\"&gtA.&itspan style=\"position:relative;top:7px\"&gt&itimg width=\"319\" height=\"21\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/&gt&it/span&gt&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%\"&gtB. &itspan style=\"position:relative;top:7px\"&gt&itimg width=\"317\" height=\"21\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/&gt&it/span&gt&it/span&gt&it/p&gt&itp&gt&itspan style=\"font-size:16px\"&gtC. O(f(n))+O(g(n)) = O(min{f(n),g(n)}) &it/span&gt&it/p&gt&itp&gt&itspan style=\"font-size:16px;font-family:&#39;Arial Unicode MS&#39;,&#39;sans-serif&#39;;display:none\"&gt&nbsp;&it/span&gt&it/p&gt&itp&gt&itspan style=\"font-size:16px\"&gtD. &itspan style=\"position:relative;top:7px\"&gt&itimg width=\"217\" height=\"21\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/&gt&it/span&gt&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt8.&itspan style=\"font-size: 19px\"&gt特权指令可以在（&nbsp;&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&it/span&gt&itspan style=\"font-size: 19px\"&gt）中执行。&it/span&gt&it/p&gt&itp style=\"margin-bottom: 0px;\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.&it/span&gt&itspan style=\"font-size: 19px\"&gt目态&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B.&it/span&gt&itspan style=\"font-size: 19px\"&gt浏览器中&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; C.&it/span&gt&itspan style=\"font-size: 19px\"&gt任意的时间&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp; &nbsp;D.&it/span&gt&itspan style=\"font-size: 19px\"&gt进程调度中&it/span&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt9.&itspan style=\"font-size: 19px\"&gt没有了（&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&it/span&gt&itspan style=\"font-size: 19px\"&gt）计算机系统就启动不起来了。&it/span&gt&it/p&gt&itp style=\"margin-bottom: 0px;\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.&it/span&gt&itspan style=\"font-size: 19px\"&gt编译器&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B.DBMS&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;C.OS&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;D.&it/span&gt&itspan style=\"font-size: 19px\"&gt浏览器&it/span&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp style=\"line-height: 150%\"&gt10.&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt能采用贪心算法求最优解的问题，一般具有的重要性质为：（）&it/span&gt&it/p&gt&itp style=\"text-indent:120px;line-height:150%\"&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gtA. &it/span&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gt最优子结构性质与贪心选择性质&it/span&gt&it/p&gt&itp style=\"text-indent:120px;line-height:150%\"&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gtB&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt．重叠子问题性质与贪心选择性质&it/span&gt&it/p&gt&itp style=\"text-indent:120px;line-height:150%\"&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gtC&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt．最优子结构性质与重叠子问题性质&it/span&gt&it/p&gt&itp style=\"text-indent:100px;line-height:150%\"&gt&itspan style=\"font-size:13px;line-height:150%;font-family:楷体_GB2312;display:none\"&gt&nbsp;&it/span&gt&it/p&gt&itp style=\"text-indent:120px;line-height:150%\"&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gtD. &it/span&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gt预排序与递归调用&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt','&itp&gt南大富士通秋招笔试试卷A卷答案卷&it/p&gt&ith5&gt出卷时间：2015/07/22&nbsp;&nbsp;&nbsp;总分：10&it/h5&gt&ith4&gt一.选择题（10*1分）&it/h4&gt&itp&gt1.D&it/p&gt&itp&gt2.D&it/p&gt&itp&gt3.A&it/p&gt&itp&gt4.C&it/p&gt&itp&gt5.B&it/p&gt&itp&gt6.BAD&it/p&gt&itp&gt7.A&it/p&gt&itp&gt8.C&it/p&gt&itp&gt9.C&it/p&gt&itp&gt10.A&it/p&gt&itp&gt\r\n				&gt;&it/p&gt'),(8,'南大富士通秋招笔试试卷','2016-07-22','B',10,'&itp&gt南大富士通秋招笔试试卷B卷&it/p&gt&ith5&gt出卷时间：2015/07/22&nbsp;&nbsp;&nbsp;总分：10&it/h5&gt&ith4&gt一.选择题（10*1分）&it/h4&gt&itp&gt1.&itspan style=\"font-size: 19px\"&gt与计算机硬件关系最密切的软件是（&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&it/span&gt&itspan style=\"font-size: 19px\"&gt）&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt.&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.&it/span&gt&itspan style=\"font-size: 19px\"&gt编译程序&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;B.&it/span&gt&itspan style=\"font-size: 19px\"&gt数据库管理程序&it/span&gt&it/p&gt&itp style=\"margin-bottom: 0px;\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; C.&it/span&gt&itspan style=\"font-size: 19px\"&gt游戏程序&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;D.OS&it/span&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp style=\"line-height:150%\"&gt2.&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt应用&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gtJohnson&it/span&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gt法则的流水作业调度采用的算法是（&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt）&it/span&gt&it/p&gt&itp style=\"text-indent:32px;line-height:150%\"&gt&itspan style=\"font-size:16px;line-height:150%\"&gtA. &it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt贪心算法&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; B. &it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt分支限界法&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; C.&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt分治法&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D. &it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt动态规划算法&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt3.&itspan style=\"font-size: 19px\"&gt（&nbsp;&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&it/span&gt&itspan style=\"font-size: 19px\"&gt）不是多道程序系统。&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.&it/span&gt&itspan style=\"font-size: 19px\"&gt单用户单任务&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;B.&it/span&gt&itspan style=\"font-size: 19px\"&gt多道批处理系统&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; C.&it/span&gt&itspan style=\"font-size: 19px\"&gt单用户多任务&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;D.&it/span&gt&itspan style=\"font-size: 19px\"&gt多用户分时系统&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp style=\"line-height: 150%\"&gt4.&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt动态规划算法的基本要素为（）&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gtA. &it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt最优子结构性质与贪心选择性质&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gtB&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt．重叠子问题性质与贪心选择性质&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gtC&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt．最优子结构性质与重叠子问题性质&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 13px;line-height:150%;font-family:楷体_GB2312;display:none\"&gt&nbsp;&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gtD. &it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt预排序与递归调用&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp style=\"line-height:150%\"&gt5.&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt算法分析中，记号&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gtO&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt表示（&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt），&it/span&gt &itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt记号&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt&itspan style=\"position:relative;top:3px\"&gt&itimg width=\"17\" height=\"17\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/&gt&it/span&gt&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt表示（&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt），&it/span&gt &itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt记号&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt&itspan style=\"position:relative;top:4px\"&gt&itimg width=\"17\" height=\"19\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/&gt&it/span&gt&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt表示（&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt）。&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%\"&gtA.&it/span&gt&itspan style=\"font-size:16px;line-height: 150%;font-family:宋体\"&gt渐进下界&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%\"&gtB.&it/span&gt&itspan style=\"font-size:16px;line-height: 150%;font-family:宋体\"&gt渐进上界&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%\"&gtC.&it/span&gt&itspan style=\"font-size:16px;line-height: 150%;font-family:宋体\"&gt非紧上界&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%\"&gtD.&it/span&gt&itspan style=\"font-size:16px;line-height: 150%;font-family:宋体\"&gt紧渐进界&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%\"&gtE.&it/span&gt&itspan style=\"font-size:16px;line-height: 150%;font-family:宋体\"&gt非紧下界&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt6.&itspan style=\"font-size: 19px\"&gt（&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt &it/span&gt&itspan style=\"font-size: 19px\"&gt）是多道操作系统不可缺少的硬件支持。&it/span&gt&it/p&gt&itp style=\"margin-bottom: 0px;\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.&it/span&gt&itspan style=\"font-size: 19px\"&gt打印机&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp;&nbsp; B.&it/span&gt&itspan style=\"font-size: 19px\"&gt中断机构&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;C.&it/span&gt&itspan style=\"font-size: 19px\"&gt软盘&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;D.&it/span&gt&itspan style=\"font-size: 19px\"&gt鼠标&it/span&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt7.&itspan style=\"font-size: 19px\"&gt特权指令可以在（&nbsp;&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&it/span&gt&itspan style=\"font-size: 19px\"&gt）中执行。&it/span&gt&it/p&gt&itp style=\"margin-bottom: 0px;\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.&it/span&gt&itspan style=\"font-size: 19px\"&gt目态&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B.&it/span&gt&itspan style=\"font-size: 19px\"&gt浏览器中&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; C.&it/span&gt&itspan style=\"font-size: 19px\"&gt任意的时间&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp; &nbsp;D.&it/span&gt&itspan style=\"font-size: 19px\"&gt进程调度中&it/span&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp style=\"line-height:150%\"&gt8.&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt以下关于渐进记号的性质是正确的有：（&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt）&it/span&gt&it/p&gt&itp&gt&itspan style=\"font-size:16px\"&gtA.&itspan style=\"position:relative;top:7px\"&gt&itimg width=\"319\" height=\"21\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/&gt&it/span&gt&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%\"&gtB. &itspan style=\"position:relative;top:7px\"&gt&itimg width=\"317\" height=\"21\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/&gt&it/span&gt&it/span&gt&it/p&gt&itp&gt&itspan style=\"font-size:16px\"&gtC. O(f(n))+O(g(n)) = O(min{f(n),g(n)}) &it/span&gt&it/p&gt&itp&gt&itspan style=\"font-size:16px;font-family:&#39;Arial Unicode MS&#39;,&#39;sans-serif&#39;;display:none\"&gt&nbsp;&it/span&gt&it/p&gt&itp&gt&itspan style=\"font-size:16px\"&gtD. &itspan style=\"position:relative;top:7px\"&gt&itimg width=\"217\" height=\"21\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/&gt&it/span&gt&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt9.&itspan style=\"font-size: 19px\"&gt没有了（&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&it/span&gt&itspan style=\"font-size: 19px\"&gt）计算机系统就启动不起来了。&it/span&gt&it/p&gt&itp style=\"margin-bottom: 0px;\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.&it/span&gt&itspan style=\"font-size: 19px\"&gt编译器&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B.DBMS&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;C.OS&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;D.&it/span&gt&itspan style=\"font-size: 19px\"&gt浏览器&it/span&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp style=\"line-height: 150%\"&gt10.&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt能采用贪心算法求最优解的问题，一般具有的重要性质为：（）&it/span&gt&it/p&gt&itp style=\"text-indent:120px;line-height:150%\"&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gtA. &it/span&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gt最优子结构性质与贪心选择性质&it/span&gt&it/p&gt&itp style=\"text-indent:120px;line-height:150%\"&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gtB&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt．重叠子问题性质与贪心选择性质&it/span&gt&it/p&gt&itp style=\"text-indent:120px;line-height:150%\"&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gtC&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt．最优子结构性质与重叠子问题性质&it/span&gt&it/p&gt&itp style=\"text-indent:100px;line-height:150%\"&gt&itspan style=\"font-size:13px;line-height:150%;font-family:楷体_GB2312;display:none\"&gt&nbsp;&it/span&gt&it/p&gt&itp style=\"text-indent:120px;line-height:150%\"&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gtD. &it/span&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gt预排序与递归调用&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt\r\n				 &gt;&it/p&gt','&itp&gt南大富士通秋招笔试试卷B卷答案卷&it/p&gt&ith5&gt出卷时间：2015/07/22&nbsp;&nbsp;&nbsp;总分：10&it/h5&gt&ith4&gt一.选择题（10*1分）&it/h4&gt&itp&gt1.D&itbr/&gt&itbr/&gt&it/p&gt&itp&gt2.D&itbr/&gt&itbr/&gt&it/p&gt&itp&gt3.A&itbr/&gt&itbr/&gt&it/p&gt&itp&gt4.C&itbr/&gt&itbr/&gt&it/p&gt&itp&gt5.BAD&itbr/&gt&itbr/&gt&it/p&gt&itp&gt6.B&itbr/&gt&itbr/&gt&it/p&gt&itp&gt7.C&itbr/&gt&itbr/&gt&it/p&gt&itp&gt8.A&itbr/&gt&itbr/&gt&it/p&gt&itp&gt9.C &itbr/&gt&itbr/&gt&it/p&gt&itp&gt10.A&itbr/&gt&itbr/&gt\r\n				 &gt;&it/p&gt'),(9,'南大富士通秋招笔试试卷20','2016-07-22','A',10,'&itp&gt南大富士通秋招笔试试卷20A卷&it/p&gt&ith5&gt出卷时间：2016/07/22&nbsp;&nbsp;&nbsp;总分：10&it/h5&gt&ith4&gt一.选择题（10*1分）&it/h4&gt&itp style=\"line-height: 150%\"&gt1.&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt能采用贪心算法求最优解的问题，一般具有的重要性质为：（）&it/span&gt&it/p&gt&itp style=\"text-indent:120px;line-height:150%\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gtA. &it/span&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gt最优子结构性质与贪心选择性质&it/span&gt&it/p&gt&itp style=\"text-indent:120px;line-height:150%\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gtB&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt．重叠子问题性质与贪心选择性质&it/span&gt&it/p&gt&itp style=\"text-indent:120px;line-height:150%\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gtC&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt．最优子结构性质与重叠子问题性质&it/span&gt&it/p&gt&itp style=\"text-indent:100px;line-height:150%\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&itspan style=\"font-size:13px;line-height:150%;font-family:楷体_GB2312;display:none\"&gt&nbsp;&it/span&gt&it/p&gt&itp style=\"text-indent:120px;line-height:150%\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gtD. &it/span&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gt预排序与递归调用&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp style=\"line-height: 150%\"&gt2.&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt动态规划算法的基本要素为（）&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gtA. &it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt最优子结构性质与贪心选择性质&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gtB&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt．重叠子问题性质与贪心选择性质&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gtC&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt．最优子结构性质与重叠子问题性质&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 13px;line-height:150%;font-family:楷体_GB2312;display:none\"&gt&nbsp;&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gtD. &it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt预排序与递归调用&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt3.&itspan style=\"font-size:16px;font-family:宋体\"&gt回溯法在问题的解空间树中，按（）策略，从根结点出发搜索解空间树。&it/span&gt&it/p&gt&itp style=\"margin-left:75px;line-height: 150%\"&gt&itspan style=\"font-size:16px;line-height:150%\"&gtA．&itspan style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\"&gt&nbsp;&nbsp;&nbsp; &it/span&gt&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt广度优先&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt B. &it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt活结点优先&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt&nbsp; C.&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt扩展结点优先&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt&nbsp; D. &it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt深度优先&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt4.&itspan style=\"font-size: 19px\"&gt通道能够完成（&it/span&gt &itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&it/span&gt&itspan style=\"font-size: 19px\"&gt）之间数据的传输。&it/span&gt&it/p&gt&itp style=\"margin-bottom: 0px;\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.CPU&it/span&gt&itspan style=\"font-size: 19px\"&gt与外设&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; B.&it/span&gt&itspan style=\"font-size: 19px\"&gt内存与外设&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp; &nbsp;C.CPU&it/span&gt&itspan style=\"font-size: 19px\"&gt与主存&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; D.&it/span&gt&itspan style=\"font-size: 19px\"&gt外设与外设&it/span&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt5.&itspan style=\"font-size:16px;font-family:宋体\"&gt分支限界法在问题的解空间树中，按（）策略，从根结点出发搜索解空间树。&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%\"&gt&nbsp;&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%\"&gt&nbsp;&nbsp;&nbsp;&nbsp; A&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt．&it/span&gt &itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt广度优先&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt B. &it/span&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gt活结点优先&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt&nbsp; C.&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family: 宋体\"&gt扩展结点优先&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt&nbsp; D. &it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt深度优先&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt6.&itspan style=\"font-size: 19px\"&gt系统的主要功能有（&itspan style=\"font-family:Arial, sans-serif\"&gt&nbsp;&it/span&gt&it/span&gt&itspan style=\"font-size: 19px\"&gt）。&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.&it/span&gt&itspan style=\"font-size: 19px\"&gt进程管理、存储器管理、设备管理、处理机管理&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; B.&it/span&gt&itspan style=\"font-size: 19px\"&gt虚拟存储管理、处理机管理、进程调度、文件系统&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; C.&it/span&gt&itspan style=\"font-size: 19px\"&gt处理机管理、存储器管理、设备管理、文件系统&it/span&gt&it/p&gt&itp style=\"margin-bottom: 0px;\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; D.&it/span&gt&itspan style=\"font-size: 19px\"&gt进程管理、中断管理、设备管理、文件系统&it/span&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt7.&itspan style=\"font-size: 19px\"&gt单处理机计算机系统中，（&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&it/span&gt&itspan style=\"font-size: 19px\"&gt）是并行操作的。&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.&it/span&gt&itspan style=\"font-size: 19px\"&gt处理机操作和通道操作是并行的&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; B.&it/span&gt&itspan style=\"font-size: 19px\"&gt程序与程序&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; C.&it/span&gt&itspan style=\"font-size: 19px\"&gt主程序与子程序&it/span&gt&it/p&gt&itp style=\"margin-bottom: 0px;\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; D.&it/span&gt&itspan style=\"font-size: 19px\"&gt用户程序与操作系统程序&it/span&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp style=\"line-height:150%\"&gt8.&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt回溯法的效率不依赖于以下哪一个因素？（&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt&nbsp;&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt）&it/span&gt&it/p&gt&itp style=\"margin: 8px 0 0 32px;text-indent: 64px\"&gt&itspan style=\"font-size:16px\"&gtA.&itspan style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &it/span&gt&it/span&gt&itspan style=\"font-size:16px;font-family:宋体\"&gt产生&it/span&gt&itspan style=\"font-size:16px\"&gtx[k]&it/span&gt&itspan style=\"font-size:16px;font-family:宋体\"&gt的时间；&it/span&gt&it/p&gt&itp style=\"margin-top:8px;margin-right:0;margin-bottom:0;margin-left:32px;margin-bottom:0;text-indent:64px\"&gt&itspan style=\"font-size:16px\"&gtB. &it/span&gt&itspan style=\"font-size:16px;font-family:宋体\"&gt满足显约束的&it/span&gt&itspan style=\"font-size:16px\"&gtx[k]&it/span&gt&itspan style=\"font-size:16px;font-family: 宋体\"&gt值的个数；&it/span&gt&it/p&gt&itp style=\"margin-top:8px;margin-right:0;margin-bottom:0;margin-left:32px;margin-bottom:0;text-indent:64px\"&gt&itspan style=\"font-size:16px\"&gtC. &it/span&gt&itspan style=\"font-size:16px;font-family:宋体\"&gt问题的解空间的形式；&it/span&gt &it/p&gt&itp style=\"margin-top:8px;margin-right:0;margin-bottom:0;margin-left:32px;margin-bottom:0;text-indent:64px\"&gt&itspan style=\"font-size:16px\"&gtD.&itspan style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &it/span&gt&it/span&gt&itspan style=\"font-size:16px;font-family:宋体\"&gt计算上界函数&it/span&gt&itspan style=\"font-size:16px\"&gtbound&it/span&gt&itspan style=\"font-size:16px;font-family:宋体\"&gt的时间；&it/span&gt&it/p&gt&itp style=\"margin-top:8px;margin-right:0;margin-bottom:0;margin-left:32px;margin-bottom:0;text-indent:64px\"&gt&itspan style=\"font-size:16px\"&gtE. &it/span&gt&itspan style=\"font-size:16px;font-family:宋体\"&gt满足约束函数和上界函数约束的所有&it/span&gt&itspan style=\"font-size:16px\"&gtx[k]&it/span&gt&itspan style=\"font-size:16px;font-family:宋体\"&gt的个数。&it/span&gt&it/p&gt&itp style=\"margin-top:8px;margin-right:0;margin-bottom:0;margin-left:32px;margin-bottom:0;text-indent:64px\"&gt&itspan style=\"font-size:16px\"&gtF.&itspan style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\"&gt&nbsp; &it/span&gt&it/span&gt&itspan style=\"font-size:16px;font-family:宋体\"&gt计算约束函数&it/span&gt&itspan style=\"font-size:16px\"&gtconstraint&it/span&gt&itspan style=\"font-size:16px;font-family:宋体\"&gt的时间；&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt9.&itspan style=\"font-size: 19px\"&gt要求在规定的时间内对外界的请求必须给予及时相应的&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gtOS&it/span&gt&itspan style=\"font-size: 19px\"&gt是（&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&it/span&gt&itspan style=\"font-size: 19px\"&gt）。&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.&it/span&gt&itspan style=\"font-size: 19px\"&gt多用户分时系统&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;B.&it/span&gt&itspan style=\"font-size: 19px\"&gt实时系统&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; C.&it/span&gt&itspan style=\"font-size: 19px\"&gt批处理系统时间&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;D.&it/span&gt&itspan style=\"font-size: 19px\"&gt网络操作系统&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt10.&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gtWindows 98 &it/span&gt&itspan style=\"font-size: 19px\"&gt是（&nbsp;&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&it/span&gt&itspan style=\"font-size: 19px\"&gt）操作系统。&it/span&gt&it/p&gt&itp style=\"margin-bottom: 0px;\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.&it/span&gt&itspan style=\"font-size: 19px\"&gt多用户分时&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; &nbsp;&nbsp;&nbsp; B.&it/span&gt&itspan style=\"font-size: 19px\"&gt批处理系统&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; &nbsp; &nbsp;&nbsp;C.&it/span&gt&itspan style=\"font-size: 19px\"&gt单用户多任务&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; &nbsp; D.&it/span&gt&itspan style=\"font-size: 19px\"&gt单用户单任务&it/span&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt11.&itspan style=\"font-size: 19px\"&gt分布式系统和网络系统的主要区别是（&nbsp;&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&it/span&gt&itspan style=\"font-size: 19px\"&gt）。&it/span&gt&it/p&gt&itp style=\"margin-bottom: 0px;\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.&it/span&gt&itspan style=\"font-size: 19px\"&gt并行性&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B.&it/span&gt&itspan style=\"font-size: 19px\"&gt透明性&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;C.&it/span&gt&itspan style=\"font-size: 19px\"&gt共享性&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D.&it/span&gt&itspan style=\"font-size: 19px\"&gt复杂性&it/span&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt12.一道比较较易的操作系统选择题（）&it/p&gt&itp&gt&nbsp; A.确实简单 &nbsp; &nbsp; &nbsp;B.不错&it/p&gt&itp&gt&nbsp; C.假的 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;D.太简单&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt\r\n				 &gt;&it/p&gt','&itp&gt南大富士通秋招笔试试卷20A卷答案卷&it/p&gt&ith5&gt出卷时间：2016/07/22&nbsp;&nbsp;&nbsp;总分：10&it/h5&gt&ith4&gt一.选择题（10*1分）&it/h4&gt&itp&gt1.A&it/p&gt&itp&gt2.C&it/p&gt&itp&gt3.D&it/p&gt&itp&gt4.C&it/p&gt&itp&gt5.A&it/p&gt&itp&gt6. c&it/p&gt&itp&gt7.A&it/p&gt&itp&gt8.C&it/p&gt&itp&gt9.B&it/p&gt&itp&gt10.C&it/p&gt&itp&gt11.C&it/p&gt&itp&gt12.C&it/p&gt&itp&gt\r\n				&gt;&it/p&gt'),(10,'南大富士通秋招笔试试卷20','2016-07-22','B',10,'&itp&gt南大富士通秋招笔试试卷20B卷&it/p&gt&ith5&gt出卷时间：2016/07/22&nbsp;&nbsp;&nbsp;总分：10&it/h5&gt&ith4&gt一.选择题（10*1分）&it/h4&gt&itp style=\"line-height: 150%\"&gt1.&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt能采用贪心算法求最优解的问题，一般具有的重要性质为：（）&it/span&gt&it/p&gt&itp style=\"text-indent:120px;line-height:150%\"&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gtA. &it/span&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gt最优子结构性质与贪心选择性质&it/span&gt&it/p&gt&itp style=\"text-indent:120px;line-height:150%\"&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gtB&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt．重叠子问题性质与贪心选择性质&it/span&gt&it/p&gt&itp style=\"text-indent:120px;line-height:150%\"&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gtC&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt．最优子结构性质与重叠子问题性质&it/span&gt&it/p&gt&itp style=\"text-indent:100px;line-height:150%\"&gt&itspan style=\"font-size:13px;line-height:150%;font-family:楷体_GB2312;display:none\"&gt&nbsp;&it/span&gt&it/p&gt&itp style=\"text-indent:120px;line-height:150%\"&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gtD. &it/span&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gt预排序与递归调用&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt2.&itspan style=\"font-size: 19px\"&gt（&nbsp;&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&it/span&gt&itspan style=\"font-size: 19px\"&gt）不是多道程序系统。&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.&it/span&gt&itspan style=\"font-size: 19px\"&gt单用户单任务&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;B.&it/span&gt&itspan style=\"font-size: 19px\"&gt多道批处理系统&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; C.&it/span&gt&itspan style=\"font-size: 19px\"&gt单用户多任务&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;D.&it/span&gt&itspan style=\"font-size: 19px\"&gt多用户分时系统&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt3.&itspan style=\"font-size: 19px\"&gt通道能够完成（&it/span&gt &itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&it/span&gt&itspan style=\"font-size: 19px\"&gt）之间数据的传输。&it/span&gt&it/p&gt&itp style=\"margin-bottom: 0px;\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.CPU&it/span&gt&itspan style=\"font-size: 19px\"&gt与外设&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; B.&it/span&gt&itspan style=\"font-size: 19px\"&gt内存与外设&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp; &nbsp;C.CPU&it/span&gt&itspan style=\"font-size: 19px\"&gt与主存&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; D.&it/span&gt&itspan style=\"font-size: 19px\"&gt外设与外设&it/span&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt4.&itspan style=\"font-size:16px;font-family:宋体\"&gt回溯法在问题的解空间树中，按（）策略，从根结点出发搜索解空间树。&it/span&gt&it/p&gt&itp style=\"margin-left:75px;line-height: 150%\"&gt&itspan style=\"font-size:16px;line-height:150%\"&gtA．&itspan style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\"&gt&nbsp;&nbsp;&nbsp; &it/span&gt&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt广度优先&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt B. &it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt活结点优先&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt&nbsp; C.&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt扩展结点优先&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt&nbsp; D. &it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt深度优先&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt5.&itspan style=\"font-size:16px;font-family:宋体\"&gt分支限界法在问题的解空间树中，按（）策略，从根结点出发搜索解空间树。&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%\"&gt&nbsp;&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%\"&gt&nbsp;&nbsp;&nbsp;&nbsp; A&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt．&it/span&gt &itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt广度优先&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt B. &it/span&gt&itspan style=\"font-size: 16px;line-height:150%;font-family:宋体\"&gt活结点优先&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt&nbsp; C.&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family: 宋体\"&gt扩展结点优先&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt&nbsp; D. &it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt深度优先&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt6.&itspan style=\"font-size: 19px\"&gt系统的主要功能有（&itspan style=\"font-family:Arial, sans-serif\"&gt&nbsp;&it/span&gt&it/span&gt&itspan style=\"font-size: 19px\"&gt）。&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.&it/span&gt&itspan style=\"font-size: 19px\"&gt进程管理、存储器管理、设备管理、处理机管理&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; B.&it/span&gt&itspan style=\"font-size: 19px\"&gt虚拟存储管理、处理机管理、进程调度、文件系统&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; C.&it/span&gt&itspan style=\"font-size: 19px\"&gt处理机管理、存储器管理、设备管理、文件系统&it/span&gt&it/p&gt&itp style=\"margin-bottom: 0px;\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; D.&it/span&gt&itspan style=\"font-size: 19px\"&gt进程管理、中断管理、设备管理、文件系统&it/span&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp style=\"line-height:150%\"&gt7.&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt回溯法的效率不依赖于以下哪一个因素？（&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gt&nbsp;&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt）&it/span&gt&it/p&gt&itp style=\"margin: 8px 0 0 32px;text-indent: 64px\"&gt&itspan style=\"font-size:16px\"&gtA.&itspan style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &it/span&gt&it/span&gt&itspan style=\"font-size:16px;font-family:宋体\"&gt产生&it/span&gt&itspan style=\"font-size:16px\"&gtx[k]&it/span&gt&itspan style=\"font-size:16px;font-family:宋体\"&gt的时间；&it/span&gt&it/p&gt&itp style=\"margin-top:8px;margin-right:0;margin-bottom:0;margin-left:32px;margin-bottom:0;text-indent:64px\"&gt&itspan style=\"font-size:16px\"&gtB. &it/span&gt&itspan style=\"font-size:16px;font-family:宋体\"&gt满足显约束的&it/span&gt&itspan style=\"font-size:16px\"&gtx[k]&it/span&gt&itspan style=\"font-size:16px;font-family: 宋体\"&gt值的个数；&it/span&gt&it/p&gt&itp style=\"margin-top:8px;margin-right:0;margin-bottom:0;margin-left:32px;margin-bottom:0;text-indent:64px\"&gt&itspan style=\"font-size:16px\"&gtC. &it/span&gt&itspan style=\"font-size:16px;font-family:宋体\"&gt问题的解空间的形式；&it/span&gt &it/p&gt&itp style=\"margin-top:8px;margin-right:0;margin-bottom:0;margin-left:32px;margin-bottom:0;text-indent:64px\"&gt&itspan style=\"font-size:16px\"&gtD.&itspan style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &it/span&gt&it/span&gt&itspan style=\"font-size:16px;font-family:宋体\"&gt计算上界函数&it/span&gt&itspan style=\"font-size:16px\"&gtbound&it/span&gt&itspan style=\"font-size:16px;font-family:宋体\"&gt的时间；&it/span&gt&it/p&gt&itp style=\"margin-top:8px;margin-right:0;margin-bottom:0;margin-left:32px;margin-bottom:0;text-indent:64px\"&gt&itspan style=\"font-size:16px\"&gtE. &it/span&gt&itspan style=\"font-size:16px;font-family:宋体\"&gt满足约束函数和上界函数约束的所有&it/span&gt&itspan style=\"font-size:16px\"&gtx[k]&it/span&gt&itspan style=\"font-size:16px;font-family:宋体\"&gt的个数。&it/span&gt&it/p&gt&itp style=\"margin-top:8px;margin-right:0;margin-bottom:0;margin-left:32px;margin-bottom:0;text-indent:64px\"&gt&itspan style=\"font-size:16px\"&gtF.&itspan style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\"&gt&nbsp; &it/span&gt&it/span&gt&itspan style=\"font-size:16px;font-family:宋体\"&gt计算约束函数&it/span&gt&itspan style=\"font-size:16px\"&gtconstraint&it/span&gt&itspan style=\"font-size:16px;font-family:宋体\"&gt的时间；&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt8.&itspan style=\"font-size: 19px\"&gt单处理机计算机系统中，（&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&it/span&gt&itspan style=\"font-size: 19px\"&gt）是并行操作的。&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.&it/span&gt&itspan style=\"font-size: 19px\"&gt处理机操作和通道操作是并行的&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; B.&it/span&gt&itspan style=\"font-size: 19px\"&gt程序与程序&it/span&gt&it/p&gt&itp style=\";margin-bottom:0\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; C.&it/span&gt&itspan style=\"font-size: 19px\"&gt主程序与子程序&it/span&gt&it/p&gt&itp style=\"margin-bottom: 0px;\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; D.&it/span&gt&itspan style=\"font-size: 19px\"&gt用户程序与操作系统程序&it/span&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp style=\"line-height:150%\"&gt9.&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt常见的两种分支限界法为（&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt）&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%\"&gtA. &it/span&gt&itspan style=\"font-size:16px;line-height: 150%;font-family:宋体\"&gt广度优先分支限界法与深度优先分支限界法；&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%\"&gtB. &it/span&gt&itspan style=\"font-size:16px;line-height: 150%;font-family:宋体\"&gt队列式（&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gtFIFO&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt）分支限界法与堆栈式分支限界法；&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%\"&gtC. &it/span&gt&itspan style=\"font-size:16px;line-height: 150%;font-family:宋体\"&gt排列树法与子集树法；&it/span&gt&it/p&gt&itp style=\"line-height:150%\"&gt&itspan style=\"font-size: 16px;line-height:150%\"&gtD. &it/span&gt&itspan style=\"font-size:16px;line-height: 150%;font-family:宋体\"&gt队列式（&it/span&gt&itspan style=\"font-size:16px;line-height:150%\"&gtFIFO&it/span&gt&itspan style=\"font-size:16px;line-height:150%;font-family:宋体\"&gt）分支限界法与优先队列式分支限界法；&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt10.&itspan style=\"font-size: 19px\"&gt处理机的所有指令可以在（&nbsp;&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&it/span&gt&itspan style=\"font-size: 19px\"&gt）中执行。&it/span&gt&it/p&gt&itp style=\"margin-bottom: 0px;\"&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp; A.&it/span&gt&itspan style=\"font-size: 19px\"&gt目态&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B.&it/span&gt&itspan style=\"font-size: 19px\"&gt浏览器中&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;C.&it/span&gt&itspan style=\"font-size: 19px\"&gt任意时间&it/span&gt&itspan style=\"font-size: 19px;font-family: Arial, sans-serif\"&gt&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; D.&it/span&gt&itspan style=\"font-size: 19px\"&gt系统态&it/span&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt\r\n				 &gt;&it/p&gt','&itp&gt南大富士通秋招笔试试卷20B卷答案卷&it/p&gt&ith5&gt出卷时间：2016/07/22&nbsp;&nbsp;&nbsp;总分：10&it/h5&gt&ith4&gt一.选择题（10*1分）&it/h4&gt&itp&gt1.A&itbr/&gt&itbr/&gt&it/p&gt&itp&gt2.A&itbr/&gt&itbr/&gt&it/p&gt&itp&gt3.C&itbr/&gt&itbr/&gt&it/p&gt&itp&gt4.D&itbr/&gt&itbr/&gt&it/p&gt&itp&gt5.A&itbr/&gt&itbr/&gt&it/p&gt&itp&gt6. c&itbr/&gt&itbr/&gt&it/p&gt&itp&gt7.C&itbr/&gt&itbr/&gt&it/p&gt&itp&gt8.A&itbr/&gt&itbr/&gt&it/p&gt&itp&gt9.D&itbr/&gt&itbr/&gt&it/p&gt&itp&gt10.D&itbr/&gt&itbr/&gt\r\n				 &gt;&it/p&gt'),(11,'南大富士通秋招笔试试卷','2016-08-16','A',4,'&itp&gt南大富士通秋招笔试试卷A卷&it/p&gt&ith5&gt出卷时间：2016/08/16&nbsp;&nbsp;&nbsp;总分：4&it/h5&gt&ith4&gt一.选择题（3*1分）&it/h4&gt&itp&gt1.&itspan style=\"font-size:16px;font-family:SimSun\"&gt在一个单链表中，若&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gtp&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt所指结点不是最后结点，在&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gtp&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt之后插入&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gts&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt所指结点，则执行&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt( &nbsp;)&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt。&it/span&gt&it/p&gt&itp&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gtA&nbsp; s-&gt;link=p;p-&gt;link=s;&it/span&gt&it/p&gt&itp&gt&itspan style=\"font-size: 16px; font-family: SimSun;\"&gtB&nbsp; s-&gt;link=p-&gt;link;p-&gt;link=s&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun;color:red\"&gt;&it/span&gt&it/p&gt&itp&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gtC&nbsp; s-&gt;link=p-&gt;link;p=s;&it/span&gt&it/p&gt&itp&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gtD&nbsp; p-&gt;link=s;s-&gt;link=p;&it/span&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt2.&itspan style=\";line-height:110%;font-family: 宋体\"&gt下面&it/span&gt&itspan style=\";line-height:110%\"&gt( &nbsp; )&it/span&gt&itspan style=\";line-height:110%;font-family:宋体\"&gt不是网络的拓扑结构。&it/span&gt&itspan style=\";line-height:110%\"&gt&nbsp; &nbsp;&nbsp;&it/span&gt&itspan style=\";line-height:110%\"&gt&it/span&gt&it/p&gt&itp style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"&gt&itspan style=\"font-size:14px;line-height:110%\"&gtA. &it/span&gt&itspan style=\"font-size:14px;line-height: 110%\"&gt星型&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B. 总线型&nbsp;&nbsp;&nbsp;&nbsp; C. 立方形&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D. 环型&it/span&gt&itspan style=\"font-size:14px;line-height: 110%\"&gt&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp style=\"margin-left: 24px\"&gt3.&itspan style=\"font-size: 16px;font-family:SimSun\"&gt1、&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt在数据结构的讨论中把数据结构从逻辑上分为 （&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt&nbsp;&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt）&it/span&gt&it/p&gt&itp style=\"line-height:21px\"&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt&nbsp;A &nbsp;&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt内部结构与外部结构&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B&nbsp;&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt静态结构与动态结构&it/span&gt&it/p&gt&itp style=\"line-height:21px\"&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt&nbsp;C &nbsp;&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt线性结构与非线性结构&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D&nbsp;&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt紧凑结构与非紧凑结构。&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&ith4&gt二.填空题（1*1分）&it/h4&gt&itp&gt1.数据库系统中常用的三种数据模型有______、______ 和 ______。&nbsp;&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&it/p&gt','&itp&gt南大富士通秋招笔试试卷A卷答案卷&it/p&gt&ith5&gt出卷时间：2016/08/16&nbsp;&nbsp;&nbsp;总分：4&it/h5&gt&ith4&gt一.选择题（3*1分）&it/h4&gt&itp&gt1.B&it/p&gt&itp&gt2.C、&it/p&gt&itp&gt3.C&it/p&gt&ith4&gt二.填空题（1*1分）&it/h4&gt&itp&gt1.：层次模型、网状模型&nbsp;和&nbsp;关系模型&it/p&gt&itp&gt&itbr/&gt&it/p&gt'),(12,'南大富士通秋招笔试试卷','2016-08-16','B',4,'&itp&gt南大富士通秋招笔试试卷B卷&it/p&gt&ith5&gt出卷时间：2016/08/16&nbsp;&nbsp;&nbsp;总分：4&it/h5&gt&ith4&gt一.选择题（3*1分）&it/h4&gt&itp&gt1.&itspan style=\";line-height:110%;font-family: 宋体\"&gt下面&it/span&gt&itspan style=\";line-height:110%\"&gt(&nbsp;&nbsp;&nbsp; )&it/span&gt&itspan style=\";line-height:110%;font-family:宋体\"&gt不是网络的拓扑结构。&it/span&gt&itspan style=\";line-height:110%\"&gt&nbsp; &nbsp;&nbsp;&it/span&gt&itspan style=\";line-height:110%\"&gt&it/span&gt&it/p&gt&itp style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"&gt&itspan style=\"font-size:14px;line-height:110%\"&gtA. &it/span&gt&itspan style=\"font-size:14px;line-height: 110%\"&gt星型&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B. 总线型&nbsp;&nbsp;&nbsp;&nbsp; C. 立方形&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D. 环型&it/span&gt&itspan style=\"font-size:14px;line-height: 110%\"&gt&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt2.&itspan style=\"font-family: SimSun;\"&gt在数据结构的讨论中把数据结构从逻辑上分为 （&it/span&gt&itspan style=\"font-family: SimSun;\"&gt&nbsp;&it/span&gt&itspan style=\"font-family: SimSun;\"&gt）&it/span&gt&itbr/&gt&it/p&gt&itp style=\"line-height:21px\"&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt&nbsp;A &nbsp;&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt内部结构与外部结构&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B&nbsp;&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt静态结构与动态结构&it/span&gt&it/p&gt&itp style=\"line-height:21px\"&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt&nbsp;C &nbsp;&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt线性结构与非线性结构&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D&nbsp;&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt紧凑结构与非紧凑结构。&it/span&gt&it/p&gt&itp&gt&itbr/&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&itp&gt3.&itspan style=\"font-size:16px;font-family:SimSun\"&gt在一个单链表中，若&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gtp&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt所指结点不是最后结点，在&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gtp&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt之后插入&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gts&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt所指结点，则执行&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt( &nbsp;)&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gt。&it/span&gt&it/p&gt&itp&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gtA&nbsp; s-&gt;link=p;p-&gt;link=s;&it/span&gt&it/p&gt&itp&gt&itspan style=\"font-size: 16px; font-family: SimSun;\"&gtB&nbsp; s-&gt;link=p-&gt;link;p-&gt;link=s&it/span&gt&itspan style=\"font-size:16px;font-family:SimSun;color:red\"&gt;&it/span&gt&it/p&gt&itp&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gtC&nbsp; s-&gt;link=p-&gt;link;p=s;&it/span&gt&it/p&gt&itp&gt&itspan style=\"font-size:16px;font-family:SimSun\"&gtD&nbsp; p-&gt;link=s;s-&gt;link=p;&it/span&gt&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&itbr/&gt&it/p&gt&ith4&gt二.填空题（1*1分）&it/h4&gt&itp&gt1.数据库系统中常用的三种数据模型有______、______ 和 ______。&nbsp;&it/p&gt&itp&gt&itbr/&gt&itbr/&gt&it/p&gt','&itp&gt南大富士通秋招笔试试卷B卷答案卷&it/p&gt&ith5&gt出卷时间：2016/08/16&nbsp;&nbsp;&nbsp;总分：4&it/h5&gt&ith4&gt一.选择题（3*1分）&it/h4&gt&itp&gt1.C、&itbr/&gt&itbr/&gt&it/p&gt&itp&gt2.C&itbr/&gt&itbr/&gt&it/p&gt&itp&gt3.B&itbr/&gt&itbr/&gt&it/p&gt&ith4&gt二.填空题（1*1分）&it/h4&gt&itp&gt&it/p&gt&itp&gt1.层次模型、网状模型&nbsp;和&nbsp;关系模型&itbr/&gt&itbr/&gt&it/p&gt');
/*!40000 ALTER TABLE `paper` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `paper_question_rel`
--

DROP TABLE IF EXISTS `paper_question_rel`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `paper_question_rel` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `score` int(11) DEFAULT NULL,
  `rate` double DEFAULT NULL,
  `q_order` int(11) DEFAULT NULL,
  `paper_id` int(11) DEFAULT NULL,
  `q_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK_14rafxqh64y1wmsm3tmndps3d` (`paper_id`),
  KEY `FK_jwl5qquvjviht0o741jgnp3wk` (`q_id`)
) ENGINE=InnoDB AUTO_INCREMENT=127 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `paper_question_rel`
--

LOCK TABLES `paper_question_rel` WRITE;
/*!40000 ALTER TABLE `paper_question_rel` DISABLE KEYS */;
INSERT INTO `paper_question_rel` VALUES (75,NULL,NULL,NULL,7,110),(76,NULL,NULL,NULL,7,22),(77,NULL,NULL,NULL,7,23),(78,NULL,NULL,NULL,7,111),(79,NULL,NULL,NULL,7,24),(80,NULL,NULL,NULL,7,113),(81,NULL,NULL,NULL,7,114),(82,NULL,NULL,NULL,7,25),(83,NULL,NULL,NULL,7,26),(84,NULL,NULL,NULL,7,115),(85,NULL,NULL,NULL,8,110),(86,NULL,NULL,NULL,8,22),(87,NULL,NULL,NULL,8,23),(88,NULL,NULL,NULL,8,111),(89,NULL,NULL,NULL,8,24),(90,NULL,NULL,NULL,8,113),(91,NULL,NULL,NULL,8,114),(92,NULL,NULL,NULL,8,25),(93,NULL,NULL,NULL,8,26),(94,NULL,NULL,NULL,8,115),(95,NULL,NULL,NULL,9,115),(96,NULL,NULL,NULL,9,111),(97,NULL,NULL,NULL,9,116),(98,NULL,NULL,NULL,9,27),(99,NULL,NULL,NULL,9,117),(100,NULL,NULL,NULL,9,28),(101,NULL,NULL,NULL,9,29),(102,NULL,NULL,NULL,9,118),(103,NULL,NULL,NULL,9,33),(104,NULL,NULL,NULL,9,37),(105,NULL,NULL,NULL,9,38),(106,NULL,NULL,NULL,9,101),(107,NULL,NULL,NULL,10,115),(108,NULL,NULL,NULL,10,111),(109,NULL,NULL,NULL,10,116),(110,NULL,NULL,NULL,10,27),(111,NULL,NULL,NULL,10,117),(112,NULL,NULL,NULL,10,28),(113,NULL,NULL,NULL,10,29),(114,NULL,NULL,NULL,10,118),(115,NULL,NULL,NULL,10,33),(116,NULL,NULL,NULL,10,37),(117,NULL,NULL,NULL,10,38),(118,NULL,NULL,NULL,10,101),(119,NULL,NULL,NULL,11,219),(120,NULL,NULL,NULL,11,44),(121,NULL,NULL,NULL,11,63),(122,NULL,NULL,NULL,11,32),(123,NULL,NULL,NULL,12,219),(124,NULL,NULL,NULL,12,44),(125,NULL,NULL,NULL,12,63),(126,NULL,NULL,NULL,12,32);
/*!40000 ALTER TABLE `paper_question_rel` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `question`
--

DROP TABLE IF EXISTS `question`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `question` (
  `q_id` int(11) NOT NULL,
  `content` text,
  `answer` text,
  `choice` text,
  `level` int(2) DEFAULT NULL,
  `attach_ment` varchar(255) DEFAULT NULL,
  `create_time` date DEFAULT NULL,
  `modify_time` date DEFAULT NULL,
  `avaliable` int(11) DEFAULT NULL,
  `qt_id` int(11) DEFAULT NULL,
  `k_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`q_id`),
  KEY `FK_lv19pe9icfigdfqknimufanbw` (`qt_id`),
  KEY `FK_h9d383hlskavyjh5idbnpgv68` (`k_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `question`
--

LOCK TABLES `question` WRITE;
/*!40000 ALTER TABLE `question` DISABLE KEYS */;
INSERT INTO `question` VALUES (21,'<p><span style=\"font-size: 19px\">一般用户更喜欢使用的系统是（</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;</span><span style=\"font-size: 19px\">）。</span></p><p style=\";margin-bottom:0\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; A.</span><span style=\"font-size: 19px\">手工操作</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;B.</span><span style=\"font-size: 19px\">单道批处理</span></p><p style=\"margin-bottom: 0px;\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; C.</span><span style=\"font-size: 19px\">多道批处理</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;D.hhhhh</span></p>','C',NULL,3,NULL,'2016-07-22','2016-07-22',0,1,9),(22,'<p><span style=\"font-size: 19px\">与计算机硬件关系最密切的软件是（</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;</span><span style=\"font-size: 19px\">）</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">.</span></p><p style=\";margin-bottom:0\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; A.</span><span style=\"font-size: 19px\">编译程序</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;B.</span><span style=\"font-size: 19px\">数据库管理程序</span></p><p style=\"margin-bottom: 0px;\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; C.</span><span style=\"font-size: 19px\">游戏程序</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;D.OS</span></p>','D',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,9),(23,'<p><span style=\"font-size: 19px\">（&nbsp;</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;</span><span style=\"font-size: 19px\">）不是多道程序系统。</span></p><p style=\";margin-bottom:0\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; A.</span><span style=\"font-size: 19px\">单用户单任务</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;B.</span><span style=\"font-size: 19px\">多道批处理系统</span></p><p style=\";margin-bottom:0\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; C.</span><span style=\"font-size: 19px\">单用户多任务</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;D.</span><span style=\"font-size: 19px\">多用户分时系统</span></p><p><br/></p>','A',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,9),(24,'<p><span style=\"font-size: 19px\">（</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\"> </span><span style=\"font-size: 19px\">）是多道操作系统不可缺少的硬件支持。</span></p><p style=\"margin-bottom: 0px;\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; A.</span><span style=\"font-size: 19px\">打印机</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp;&nbsp; B.</span><span style=\"font-size: 19px\">中断机构</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;C.</span><span style=\"font-size: 19px\">软盘</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;D.</span><span style=\"font-size: 19px\">鼠标</span></p>','B',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,9),(25,'<p><span style=\"font-size: 19px\">特权指令可以在（&nbsp;</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;</span><span style=\"font-size: 19px\">）中执行。</span></p><p style=\"margin-bottom: 0px;\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; A.</span><span style=\"font-size: 19px\">目态</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B.</span><span style=\"font-size: 19px\">浏览器中</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; C.</span><span style=\"font-size: 19px\">任意的时间</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp; &nbsp;D.</span><span style=\"font-size: 19px\">进程调度中</span></p>','C',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,9),(26,'<p><span style=\"font-size: 19px\">没有了（</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;</span><span style=\"font-size: 19px\">）计算机系统就启动不起来了。</span></p><p style=\"margin-bottom: 0px;\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; A.</span><span style=\"font-size: 19px\">编译器</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B.DBMS&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;C.OS&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;D.</span><span style=\"font-size: 19px\">浏览器</span></p>','C ',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,9),(27,'<p><span style=\"font-size: 19px\">通道能够完成（</span> <span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;</span><span style=\"font-size: 19px\">）之间数据的传输。</span></p><p style=\"margin-bottom: 0px;\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; A.CPU</span><span style=\"font-size: 19px\">与外设</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; B.</span><span style=\"font-size: 19px\">内存与外设</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp; &nbsp;C.CPU</span><span style=\"font-size: 19px\">与主存</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; D.</span><span style=\"font-size: 19px\">外设与外设</span></p>','C',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,9),(28,'<p><span style=\"font-size: 19px\">系统的主要功能有（<span style=\"font-family:Arial, sans-serif\">&nbsp;</span></span><span style=\"font-size: 19px\">）。</span></p><p style=\";margin-bottom:0\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; A.</span><span style=\"font-size: 19px\">进程管理、存储器管理、设备管理、处理机管理</span></p><p style=\";margin-bottom:0\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; B.</span><span style=\"font-size: 19px\">虚拟存储管理、处理机管理、进程调度、文件系统</span></p><p style=\";margin-bottom:0\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; C.</span><span style=\"font-size: 19px\">处理机管理、存储器管理、设备管理、文件系统</span></p><p style=\"margin-bottom: 0px;\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; D.</span><span style=\"font-size: 19px\">进程管理、中断管理、设备管理、文件系统</span></p>',' c',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,9),(29,'<p><span style=\"font-size: 19px\">单处理机计算机系统中，（</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;</span><span style=\"font-size: 19px\">）是并行操作的。</span></p><p style=\";margin-bottom:0\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; A.</span><span style=\"font-size: 19px\">处理机操作和通道操作是并行的</span></p><p style=\";margin-bottom:0\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; B.</span><span style=\"font-size: 19px\">程序与程序</span></p><p style=\";margin-bottom:0\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; C.</span><span style=\"font-size: 19px\">主程序与子程序</span></p><p style=\"margin-bottom: 0px;\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; D.</span><span style=\"font-size: 19px\">用户程序与操作系统程序</span></p>','A',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,9),(30,'<p><span style=\"font-size: 19px\">处理机的所有指令可以在（&nbsp;</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;</span><span style=\"font-size: 19px\">）中执行。</span></p><p style=\"margin-bottom: 0px;\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; A.</span><span style=\"font-size: 19px\">目态</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B.</span><span style=\"font-size: 19px\">浏览器中</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;C.</span><span style=\"font-size: 19px\">任意时间</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; D.</span><span style=\"font-size: 19px\">系统态</span></p>','D',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,9),(31,'<p style=\";margin-bottom:0\"><span style=\"font-size: 19px\">（</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;</span><span style=\"font-size: 19px\">）功能不是操作系统直接完成的功能。</span></p><p style=\";margin-bottom:0\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; A.</span><span style=\"font-size: 19px\">管理计算机硬盘</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;B.</span><span style=\"font-size: 19px\">对程序进行编译</span></p><p style=\";margin-bottom:0\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; C.</span><span style=\"font-size: 19px\">实现虚拟存储器</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;D.</span><span style=\"font-size: 19px\">删除文件</span></p><p><br/></p>','B',NULL,3,NULL,'2016-07-22',NULL,1,1,9),(32,'<p style=\"margin-left: 24px\"><span style=\"font-size: 16px;font-family:SimSun\">1、</span><span style=\"font-size:16px;font-family:SimSun\">在数据结构的讨论中把数据结构从逻辑上分为 （</span><span style=\"font-size:16px;font-family:SimSun\">&nbsp;</span><span style=\"font-size:16px;font-family:SimSun\">）</span></p><p style=\"line-height:21px\"><span style=\"font-size:16px;font-family:SimSun\">&nbsp;A &nbsp;</span><span style=\"font-size:16px;font-family:SimSun\">内部结构与外部结构</span><span style=\"font-size:16px;font-family:SimSun\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B&nbsp;</span><span style=\"font-size:16px;font-family:SimSun\">静态结构与动态结构</span></p><p style=\"line-height:21px\"><span style=\"font-size:16px;font-family:SimSun\">&nbsp;C &nbsp;</span><span style=\"font-size:16px;font-family:SimSun\">线性结构与非线性结构</span><span style=\"font-size:16px;font-family:SimSun\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D&nbsp;</span><span style=\"font-size:16px;font-family:SimSun\">紧凑结构与非紧凑结构。</span></p><p><br/></p>','C',NULL,3,NULL,'2016-07-22',NULL,1,1,8),(33,'<p style=\";margin-bottom:0\"><span style=\"font-size: 19px\">要求在规定的时间内对外界的请求必须给予及时相应的</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">OS</span><span style=\"font-size: 19px\">是（</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;</span><span style=\"font-size: 19px\">）。</span></p><p style=\";margin-bottom:0\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; A.</span><span style=\"font-size: 19px\">多用户分时系统</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;B.</span><span style=\"font-size: 19px\">实时系统</span></p><p style=\";margin-bottom:0\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; C.</span><span style=\"font-size: 19px\">批处理系统时间</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;D.</span><span style=\"font-size: 19px\">网络操作系统</span></p><p><br/></p>','B',NULL,3,NULL,'2016-07-22',NULL,1,1,9),(34,'<p><span style=\"font-size: 19px\">（</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\"> </span><span style=\"font-size: 19px\">）对多用户分时系统最重要。</span></p><p style=\"margin-bottom: 0px;\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; A.</span><span style=\"font-size: 19px\">实时性</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B.</span><span style=\"font-size: 19px\">交互性</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;C.</span><span style=\"font-size: 19px\">共享性</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D.</span><span style=\"font-size: 19px\">运行效率</span></p>','B',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,9),(35,'<p><span style=\"font-size: 19px\">（&nbsp;</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;</span><span style=\"font-size: 19px\">）对多道批处理系统最重要。</span></p><p style=\"margin-bottom: 0px;\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; A.</span><span style=\"font-size: 19px\">实时性</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B.</span><span style=\"font-size: 19px\">交互性</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;C.</span><span style=\"font-size: 19px\">共享性</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D.</span><span style=\"font-size: 19px\">运行效率</span></p>','D ',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,9),(36,'<p style=\"line-height:21px\"><span style=\"font-size:16px;font-family:SimSun\">采用线性链表表示一个向量时，要求占用的存储空间地址（</span><span style=\"font-size:16px;font-family:SimSun\">&nbsp;</span><span style=\"font-size:16px;font-family:SimSun\">）</span></p><p style=\"line-height:21px\"><span style=\"font-size:16px;font-family:SimSun\">&nbsp; A&nbsp;</span><span style=\"font-size:16px;font-family:SimSun\">必须是连续的</span><span style=\"font-size:16px;font-family:SimSun\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; B&nbsp; </span><span style=\"font-size: 16px;font-family:SimSun\">部分地址必须是连续的</span></p><p style=\"line-height:21px\"><span style=\"font-size:16px;font-family:SimSun\">&nbsp; C &nbsp;</span><span style=\"font-size:16px;font-family:SimSun\">一定是不连续的 </span><span style=\"font-size:16px;font-family:SimSun\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;D&nbsp; </span><span style=\"font-size: 16px;font-family:SimSun\">可连续可不连续</span></p><p><br/></p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,8),(37,'<p><span style=\"font-size: 19px;font-family: Arial, sans-serif\">Windows 98 </span><span style=\"font-size: 19px\">是（&nbsp;</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;</span><span style=\"font-size: 19px\">）操作系统。</span></p><p style=\"margin-bottom: 0px;\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; A.</span><span style=\"font-size: 19px\">多用户分时</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; &nbsp;&nbsp;&nbsp; B.</span><span style=\"font-size: 19px\">批处理系统</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; &nbsp; &nbsp;&nbsp;C.</span><span style=\"font-size: 19px\">单用户多任务</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; &nbsp; D.</span><span style=\"font-size: 19px\">单用户单任务</span></p>','C',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,9),(38,'<p><span style=\"font-size: 19px\">分布式系统和网络系统的主要区别是（&nbsp;</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;</span><span style=\"font-size: 19px\">）。</span></p><p style=\"margin-bottom: 0px;\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; A.</span><span style=\"font-size: 19px\">并行性</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B.</span><span style=\"font-size: 19px\">透明性</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;C.</span><span style=\"font-size: 19px\">共享性</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D.</span><span style=\"font-size: 19px\">复杂性</span></p>','C',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,9),(39,'<p><span style=\"font-size: 19px\">（</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;</span><span style=\"font-size: 19px\">）操作系统允许在一台主机上同时连接多台终端，多个用户可以通过各自的终端同时交互的使用计算机。</span></p><p style=\"margin-bottom: 0px;\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; A.</span><span style=\"font-size: 19px\">网络</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B.</span><span style=\"font-size: 19px\">分布式</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;C.</span><span style=\"font-size: 19px\">分时</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D.</span><span style=\"font-size: 19px\">实时</span></p>','A',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,9),(40,'<p><span style=\"font-size: 19px\">如果分时操作系统的时间片一定，那么（<span style=\"font-family:Arial, sans-serif\">&nbsp;</span></span><span style=\"font-size: 19px\">），则相应时间越长。</span></p><p style=\"margin-bottom: 0px;\"><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; A.</span><span style=\"font-size: 19px\">用户数越少</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp; &nbsp;&nbsp; B.</span><span style=\"font-size: 19px\">用户数越多</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;C.</span><span style=\"font-size: 19px\">内存越小</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; D.</span><span style=\"font-size: 19px\">内存越大</span></p>','B',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,9),(41,'<p><span style=\"font-size:16px;font-family:SimSun\">&nbsp;采用顺序搜索方法查找长度为</span><em><span style=\"font-size:16px;font-family:SimSun\">n</span></em><span style=\"font-size:16px;font-family:SimSun\">的顺序表时，搜索成功的平均搜索长度为（</span><span style=\"font-size:16px;font-family:SimSun\">&nbsp; &nbsp;&nbsp;</span><span style=\"font-size:16px;font-family:SimSun\">）。</span></p><p style=\"line-height:21px\"><span style=\"font-size:16px;font-family:SimSun\">&nbsp; A.<em>n</em>&nbsp; &nbsp; B.<em>n</em>/2 &nbsp; &nbsp; C .(<em>n</em>-1)/2 &nbsp; &nbsp; D. (<em>n</em>+1)/2</span></p><p><br/></p>','  D',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,8),(42,'<p style=\";margin-bottom:0\"><span style=\"font-size: 19px\">现代操作系统的两个最基本的特征是（</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; </span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; &nbsp;&nbsp;</span><span style=\"font-size: 19px\">）和（</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\"> &nbsp;</span><span style=\"font-size: 19px\">）。</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></p><p><br/></p>','并发  共享',NULL,3,NULL,'2016-07-22',NULL,1,1,9),(43,'<p style=\";margin-bottom:0\"><span style=\"font-size: 19px\">感知进程存在的唯一标志是（</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp;&nbsp;</span><span style=\"font-size: 19px\">）。</span></p><p><br/></p>','进程控制块（PCB）',NULL,3,NULL,'2016-07-22',NULL,1,1,9),(44,'<p><span style=\"font-size:16px;font-family:SimSun\">在一个单链表中，若</span><span style=\"font-size:16px;font-family:SimSun\">p</span><span style=\"font-size:16px;font-family:SimSun\">所指结点不是最后结点，在</span><span style=\"font-size:16px;font-family:SimSun\">p</span><span style=\"font-size:16px;font-family:SimSun\">之后插入</span><span style=\"font-size:16px;font-family:SimSun\">s</span><span style=\"font-size:16px;font-family:SimSun\">所指结点，则执行</span><span style=\"font-size:16px;font-family:SimSun\">( &nbsp;)</span><span style=\"font-size:16px;font-family:SimSun\">。</span></p><p><span style=\"font-size:16px;font-family:SimSun\">A&nbsp; s-&gt;link=p;p-&gt;link=s;</span></p><p><span style=\"font-size: 16px; font-family: SimSun;\">B&nbsp; s-&gt;link=p-&gt;link;p-&gt;link=s</span><span style=\"font-size:16px;font-family:SimSun;color:red\">;</span></p><p><span style=\"font-size:16px;font-family:SimSun\">C&nbsp; s-&gt;link=p-&gt;link;p=s;</span></p><p><span style=\"font-size:16px;font-family:SimSun\">D&nbsp; p-&gt;link=s;s-&gt;link=p;</span></p>','B',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,1),(45,'<p><span style=\"font-size:16px;font-family:SimSun\">&nbsp;顺序搜索算法适合于存储结构为（</span><span style=\"font-size:16px;font-family:SimSun\">&nbsp; &nbsp;</span><span style=\"font-size:16px;font-family:SimSun\">）的线性表。</span></p><p style=\"margin: 7px 0mm\">&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:16px;font-family:SimSun\">A&nbsp; </span><span style=\"font-size: 16px;font-family:SimSun\">散列存储</span><span style=\"font-size:16px;font-family:SimSun\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; B&nbsp; </span><span style=\"font-size:16px;font-family:SimSun\">顺序存储或链接存储</span><span style=\"font-size:16px;font-family:SimSun\">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; </span></p><p style=\"margin: 7px 0mm\">&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size:16px;font-family:SimSun\">C&nbsp; </span><span style=\"font-size: 16px;font-family:SimSun\">压缩存储</span><span style=\"font-size:16px;font-family:SimSun\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; D&nbsp; </span><span style=\"font-size: 16px;font-family:SimSun\">索引存储</span></p><p><br/></p>',' B',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,8),(46,'<p><span style=\"font-size: 19px;font-family: 宋体\">某系统中有</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">3</span><span style=\"font-size: 19px;font-family: 宋体\">个并发的进程，都需要同类资源</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">4</span><span style=\"font-size: 19px;font-family: 宋体\">个，该系统中不会因这类资源发生死锁的最少资源数目是（</span><span style=\"font-size: 19px;font-family: 宋体\">）。</span></p>','10 ',NULL,3,NULL,'2016-07-22',NULL,1,2,9),(47,'<p><span style=\"font-size: 19px;font-family: 宋体\">设备独立性的含义是（</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; &nbsp; &nbsp;</span><span style=\"font-size: 19px;font-family: 宋体\">）</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></p>','应用程序独立于具体的物理设备',NULL,3,NULL,'2016-07-22',NULL,1,2,9),(48,'<p><span style=\"font-size: 14pt; font-family: 宋体;\">虚拟存储器管理系统的基础是（ &nbsp;）。</span>&gt;</p>','程序的局部性原理',NULL,3,NULL,'2016-07-22','2016-07-22',1,2,9),(49,'<p><span style=\"font-size: 14pt; font-family: 宋体;\">在计算机中有许多资源一次只能允许一个进程使用，如果多个进程同时使用这些资源，则有可能造成系统的混乱，这些资源被称为（ &nbsp;）。</span>&gt;</p>','临界资源',NULL,3,NULL,'2016-07-22','2016-07-22',1,2,9),(50,'<p><span style=\"font-size: 19px\">批处理操作系统的主要缺点是（</span>&nbsp;<span style=\"font-size: 19px\">）。</span></p>','缺少交互性',NULL,3,NULL,'2016-07-22','2016-07-22',1,2,9),(51,'<p style=\"margin: 7px 0mm\"><span style=\"font-size:16px;font-family:SimSun\"></span></p><p><span style=\"font-size:16px;font-family:SimSun\">对于任何一棵二叉树</span><span style=\"font-size:16px;font-family:SimSun\">T</span><span style=\"font-size:16px;font-family:SimSun\">，如果其终端结点数为</span><span style=\"font-size:16px;font-family:SimSun\">n<sub>0</sub></span><sub><span style=\"font-size:16px;font-family:SimSun\">，</span></sub><span style=\"font-size:16px;font-family:SimSun\">度为</span><span style=\"font-size:16px;font-family:SimSun\">2</span><span style=\"font-size:16px;font-family:SimSun\">的结点为</span><span style=\"font-size:16px;font-family:SimSun\">n<sub>2</sub>.,</span><span style=\"font-size:16px;font-family:SimSun\">则</span><span style=\"font-size:16px;font-family:SimSun\">( &nbsp; )</span></p><p><span style=\"font-size:16px;font-family: SimSun\">A n<sub>0=</sub> n<sub>2</sub>+1&nbsp;&nbsp;&nbsp; B n<sub>2</sub>= n<sub>0</sub>+1&nbsp;&nbsp;&nbsp;&nbsp; C n<sub>0=</sub> 2n<sub>2</sub>+1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D n<sub>2</sub>=2n<sub>0</sub>+1</span></p><p style=\"margin: 7px 0mm\"><span style=\"font-size:16px;font-family:SimSun\"></span><br/></p><p><br/></p>',' A',NULL,3,NULL,'2016-07-22',NULL,1,1,8),(52,'<p style=\";margin-bottom:0\"><span style=\"font-size: 19px\">（）是一个程序对某个数据集的一次运行活动。</span></p><p><br/></p>','进程',NULL,3,NULL,'2016-07-22',NULL,1,1,9),(53,'<p><span style=\"font-size:16px;font-family:SimSun\">7</span><span style=\"font-size:16px;font-family:SimSun\">、栈中存取数据的原则（　 &nbsp; &nbsp;&nbsp;</span><span style=\"font-size: 16px;font-family:SimSun\">），队列中存取数据的原则（　 &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-size: 16px;font-family:SimSun\">　）</span></p>','后进先出       先进先出',NULL,3,NULL,'2016-07-22',NULL,1,2,8),(54,'<p style=\";margin-bottom:0\"><span style=\"font-size: 19px\">简述设备驱动程序通常要完成哪些工作？</span></p><p style=\";margin-bottom:0\"><br/></p><p><br/></p>','答：（1）将抽象要求转化为具体要求\r\n（2）检查I/O请求的合法性\r\n（3）读出和检查设备的状态\r\n（4）传送必要的参数\r\n（5）工作方式的设置\r\n（6）启动I/O设备',NULL,3,NULL,'2016-07-22',NULL,1,3,9),(55,'<p><span style=\"font-size:16px;font-family:SimSun\">设高度为</span><span style=\"font-size: 16px;font-family:SimSun\">h</span><span style=\"font-size:16px;font-family:SimSun\">的空二叉树的高度为</span><span style=\"font-size: 16px;font-family:SimSun\">-1</span><span style=\"font-size:16px;font-family:SimSun\">，只有一个结点的二叉树的高度为</span><span style=\"font-size:16px;font-family:SimSun\">0</span><span style=\"font-size:16px;font-family:SimSun\">，若设二叉树只有度为</span><span style=\"font-size:16px;font-family:SimSun\">2</span><span style=\"font-size:16px;font-family:SimSun\">上度为</span><span style=\"font-size:16px;font-family:SimSun\">0</span><span style=\"font-size:16px;font-family:SimSun\">的结点，则该二叉树中所含结点至少有（　 &nbsp; &nbsp;</span><span style=\"font-size:16px;font-family:SimSun\">　）个。</span></p>','2h+1　',NULL,3,NULL,'2016-07-22',NULL,1,2,8),(56,'<p style=\";margin-bottom:0\"><span style=\"font-size: 19px\">什么是文件的逻辑结构和文件的物理结构？</span></p><p style=\";margin-bottom:0\"><br/></p><p><br/></p>','此题答案为：答：文件的逻辑机构是从用户的观点出发所观察到的文件组织形式，是用户可以直接处理的数据及其结构，它独立于文件的物理特性，又称为文件组织。\r\n  文件的物理结构，又称为文件的存储结构，是指文件在外存上的存储组织形式。这不仅与存储性能有关，而且与所采用的外存分配方式有关。',NULL,3,NULL,'2016-07-22',NULL,1,3,9),(57,'<p><span style=\"font-size: 16px;font-family: SimSun\">在散列存储中，装载因子α又称为装载系数，若用</span><span style=\"font-size: 16px;font-family: SimSun\">m</span><span style=\"font-size: 16px;font-family: SimSun\">表示散列表的长度，</span><span style=\"font-size: 16px;font-family: SimSun\">n</span><span style=\"font-size: 16px;font-family: SimSun\">表示待散列存储的元素的个数，则α等于（ &nbsp; &nbsp;&nbsp;</span><span style=\"font-size: 16px;font-family: SimSun\">）。</span></p>','n/m',NULL,3,NULL,'2016-07-22',NULL,1,2,8),(58,'<p style=\";margin-bottom:0\"><span style=\"font-size: 19px\">简述操作系统的定义。</span></p><p style=\";margin-bottom:0\"><br/></p><p><br/></p>','答：操作系统是计算机系统的一种系统软件，它统一管理计算机系统的资源和控制程序的执行。',NULL,3,NULL,'2016-07-22',NULL,1,3,9),(59,'<p><span style=\"font-size: 19px\">在多道程序设计技术的系统中，操作系统怎样才会占领中央处理器？</span></p>','此题答案为：答：只有当中断装置发现有事件发生时，它才会中断当前占用中央处理器的程序执行，让操作系统的处理服务程序占用中央处理器并执行之。',NULL,3,NULL,'2016-07-22','2016-07-22',1,3,9),(60,'<p><span style=\"font-size:16px;font-family:SimSun\">在霍夫曼编码中，若编码长度只允许小于等于</span><span style=\"font-size:16px;font-family:SimSun\">4,</span><span style=\"font-size:16px;font-family:SimSun\">则除掉已对两个字符编码为</span><span style=\"font-size:16px;font-family:SimSun\">0</span><span style=\"font-size:16px;font-family:SimSun\">和</span><span style=\"font-size:16px;font-family:SimSun\">10</span><span style=\"font-size:16px;font-family:SimSun\">外，还可以最多对（</span><span style=\"font-size:16px;font-family:SimSun\">&nbsp; &nbsp;&nbsp;</span><span style=\"font-size: 16px;font-family:SimSun\">）个字符编码。</span></p>','  4',NULL,3,NULL,'2016-07-22',NULL,1,2,8),(61,'<p style=\";margin-bottom:0\"><span style=\"font-size: 19px\">简述</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&quot;</span><span style=\"font-size: 19px\">删除文件</span><span style=\"font-size: 19px;font-family: Arial, sans-serif\">&quot;</span><span style=\"font-size: 19px\">操作的系统处理过程。</span></p><p style=\"margin-bottom: 0px;\"><br/></p>','此题答案为：答：用户用本操作向系统提出删除一个文件的要求，系统执行时把指定文件的名字从目录和索引表中除去，并收回它所占用的存储区域，但删除一个文件前应先关闭该文件。\r\n',NULL,3,NULL,'2016-07-22',NULL,1,3,9),(62,'<p><span style=\"font-size:16px;font-family:SimSun\">已知具有</span><span style=\"font-size: 16px;font-family:SimSun\">n</span><span style=\"font-size:16px;font-family:SimSun\">个元素的一维数组采用顺序存储结构，每个元素占</span><span style=\"font-size:16px;font-family:SimSun\">k</span><span style=\"font-size:16px;font-family:SimSun\">个存储单元，第一个元素的地址为</span><span style=\"font-size:16px;font-family:SimSun\">LOC(a1)</span><span style=\"font-size:16px;font-family:SimSun\">，那么，</span><span style=\"font-size:16px;font-family:SimSun\">LOC(ai)=<span style=\"text-decoration:underline;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>&nbsp;</span><span style=\"font-size:16px;font-family:SimSun\">。</span></p>','LOC(a1)+(i-1)*k',NULL,3,NULL,'2016-07-22','2016-07-22',1,2,8),(63,'<p><strong><span style=\";line-height:110%;font-family: 宋体\">下面</span></strong><strong><span style=\";line-height:110%\">(&nbsp;&nbsp;&nbsp; )</span></strong><strong><span style=\";line-height:110%;font-family:宋体\">不是网络的拓扑结构。</span></strong><strong><span style=\";line-height:110%\">&nbsp; &nbsp;&nbsp;</span></strong></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">A. </span></strong><strong><span style=\"font-size:14px;line-height: 110%\">星型&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B. 总线型&nbsp;&nbsp;&nbsp;&nbsp; C. 立方形&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D. 环型</span></strong></p><p><br/></p>','C、',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,6),(64,'<p><span style=\";line-height:110%;font-family: 宋体\">以下说法哪一个是不正确的</span><span style=\";line-height:110%\">(&nbsp; )</span><span style=\";line-height:110%;font-family:宋体\">。</span></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><span style=\"font-size:14px;line-height:110%\">A. </span><span style=\"font-size:14px;line-height: 110%\">计算机网络分为资源子网和通讯子网</span></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><span style=\"font-size:14px;line-height:110%\">B. </span><span style=\"font-size:14px;line-height: 110%\">在局域网中，如每台计算机在逻辑上都是平等的，不存在主从关系，称为对等网络</span></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><span style=\"font-size:14px;line-height:110%\">C. </span><span style=\"font-size:14px;line-height: 110%\">在非对等网络中，存在着主从关系，即某些计算机扮演主角的服务器，其余计算机则充当配角的客户机</span></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><span style=\"font-size:14px;line-height:110%\">D. </span><span style=\"font-size:14px;line-height: 110%\">如果服务器的处理能力强而客户机的处理能力弱，就称为胖客户机/瘦服务器</span></p><p><br/></p>','D',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,6),(65,'<p><span style=\";line-height:110%;font-family: 宋体\">组建计算机网络的目的是为了能够相互共享资源，这里的计算机资源主要是指硬件、软件与</span><span style=\";line-height:110%\">(&nbsp; )</span><span style=\";line-height:110%;font-family:宋体\">。</span></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><span style=\"font-size:14px;line-height:110%\">&nbsp;A. </span><span style=\"font-size:14px;line-height:110%\">大型机&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B. 通信系统&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; C. 服务器&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D. 数据</span></p><p><br/></p><p><br/></p>','D',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,6),(66,'<p style=\"line-height:20px\"><span style=\"font-size:16px;font-family:SimSun\">对于一个高度为</span><span style=\"font-size:16px;font-family:SimSun\">h</span><span style=\"font-size:16px;font-family:SimSun\">的</span><span style=\"font-size:16px;font-family:SimSun\">AVL</span><span style=\"font-size:16px;font-family:SimSun\">树，其最少结点数是多少？反之，对于一个有</span><span style=\"font-size:16px;font-family:SimSun\">n</span><span style=\"font-size:16px;font-family:SimSun\">个结点的</span><span style=\"font-size:16px;font-family:SimSun\">AVL</span><span style=\"font-size:16px;font-family:SimSun\">树</span><span style=\"font-size:16px;font-family:SimSun\">, </span><span style=\"font-size:16px;font-family:SimSun\">其最大高度是多少</span><span style=\"font-size:16px;font-family:SimSun\">? </span><span style=\"font-size:16px;font-family:SimSun\">最小高度是多少</span><span style=\"font-size:16px;font-family:SimSun\">?</span></p><p><br/></p>','设高度为h(空树的高度为-1)的AVL树的最少结点为Nh，则Nh = Fh+3 -1。\r\nFh 是斐波那契数。又设AVL树有n个结点，则其最大高度不超过3/2*log2(n+1),\r\n最小高度为「log2(n+1) ┐-1。\r\n',NULL,3,NULL,'2016-07-22',NULL,1,3,8),(67,'<p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">计算机网络的目标是(&nbsp; )。</span></strong></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">A. </span></strong><strong><span style=\"font-size:14px;line-height: 110%\">提高计算机安全性&nbsp;&nbsp;&nbsp;&nbsp; B. 分布处理 &nbsp;&nbsp;&nbsp;&nbsp; C. 将多台计算机连接起来&nbsp;&nbsp;&nbsp; D. 共享软件、硬件和数据资源</span></strong></p><p><br/></p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,6),(68,'<p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">下列哪一项是计算机网络技术发展的一个里程碑，它的研究成果对促进网络技术的发展起到重用的作用，并为Internet的形成奠定了基础(&nbsp; )。</span></strong></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">A. ARPANET&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B. NSFNET&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; C. Internet&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D. ATM</span></strong></p><p><br/></p>','A',NULL,3,NULL,'2016-07-22',NULL,1,1,6),(69,'<p style=\"line-height:20px;vertical-align:middle\"><span style=\"font-size:16px;font-family:SimSun\">一棵高度为</span><span style=\"font-size:16px;font-family:SimSun\">h</span><span style=\"font-size:16px;font-family:SimSun\">的满</span><span style=\"font-size:16px;font-family:SimSun\">k</span><span style=\"font-size:16px;font-family:SimSun\">叉树有如下性质</span><span style=\"font-size:16px;font-family:SimSun\">: </span><span style=\"font-size:16px;font-family:SimSun\">第</span><span style=\"font-size:16px;font-family:SimSun\">h</span><span style=\"font-size:16px;font-family:SimSun\">层上的结点都是叶结点</span><span style=\"font-size:16px;font-family:SimSun\">, </span><span style=\"font-size:16px;font-family:SimSun\">其余各层上每个结点都有</span><span style=\"font-size:16px;font-family:SimSun\">k</span><span style=\"font-size:16px;font-family:SimSun\">棵非空子树</span><span style=\"font-size:16px;font-family:SimSun\">, </span><span style=\"font-size:16px;font-family:SimSun\">如果按层次自顶向下</span><span style=\"font-size:16px;font-family:SimSun\">, </span><span style=\"font-size:16px;font-family:SimSun\">同一层自左向右</span><span style=\"font-size:16px;font-family:SimSun\">, </span><span style=\"font-size:16px;font-family:SimSun\">顺序从</span><span style=\"font-size:16px;font-family:SimSun\">1</span><span style=\"font-size:16px;font-family:SimSun\">开始对全部结点进行编号</span><span style=\"font-size:16px;font-family:SimSun\">, </span><span style=\"font-size:16px;font-family:SimSun\">试问</span><span style=\"font-size:16px;font-family:SimSun\">:</span></p><p style=\"line-height:20px;vertical-align:middle\"><span style=\"font-size:16px;font-family:SimSun\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (1) </span><span style=\"font-size:16px;font-family:SimSun\">各层的结点个数是多少</span><span style=\"font-size:16px;font-family:SimSun\">?</span></p><p style=\"line-height:20px;vertical-align:middle\"><span style=\"font-size:16px;font-family:SimSun\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (2) </span><span style=\"font-size:16px;font-family:SimSun\">编号为</span><span style=\"font-size:16px;font-family:SimSun\">i</span><span style=\"font-size:16px;font-family:SimSun\">的结点的父结点</span><span style=\"font-size:16px;font-family:SimSun\">(</span><span style=\"font-size:16px;font-family:SimSun\">若存在</span><span style=\"font-size:16px;font-family:SimSun\">)</span><span style=\"font-size:16px;font-family:SimSun\">的编号是多少</span><span style=\"font-size:16px;font-family:SimSun\">?</span></p><p style=\"line-height:20px;vertical-align:middle\"><span style=\"font-size:16px;font-family:SimSun\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (3) </span><span style=\"font-size:16px;font-family:SimSun\">编号为</span><span style=\"font-size:16px;font-family:SimSun\">i</span><span style=\"font-size:16px;font-family:SimSun\">的结点的第</span><span style=\"font-size:16px;font-family:SimSun\">m</span><span style=\"font-size:16px;font-family:SimSun\">个孩子结点</span><span style=\"font-size:16px;font-family:SimSun\">(</span><span style=\"font-size:16px;font-family:SimSun\">若存在</span><span style=\"font-size:16px;font-family:SimSun\">)</span><span style=\"font-size:16px;font-family:SimSun\">的编号是多少</span><span style=\"font-size:16px;font-family:SimSun\">?</span></p><p style=\"line-height:20px;vertical-align:middle\"><span style=\"font-size:16px;font-family:SimSun\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (4) </span><span style=\"font-size:16px;font-family:SimSun\">编号为</span><span style=\"font-size:16px;font-family:SimSun\">i</span><span style=\"font-size:16px;font-family:SimSun\">的结点有右兄弟的条件是什么</span><span style=\"font-size:16px;font-family:SimSun\">? </span><span style=\"font-size:16px;font-family:SimSun\">其右兄弟结点的编号是多少</span><span style=\"font-size:16px;font-family:SimSun\">?</span></p><p style=\"line-height:20px;vertical-align:middle\"><span style=\"font-size:16px;font-family:SimSun\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (5) </span><span style=\"font-size:16px;font-family:SimSun\">若结点个数为 </span><span style=\"font-size:16px;font-family:SimSun\">n, </span><span style=\"font-size:16px;font-family:SimSun\">则高度</span><span style=\"font-size:16px;font-family:SimSun\">h</span><span style=\"font-size:16px;font-family:SimSun\">是</span><span style=\"font-size:16px;font-family:SimSun\">n </span><span style=\"font-size:16px;font-family:SimSun\">的什么函数关系</span><span style=\"font-size:16px;font-family:SimSun\">?</span></p><p><br/></p>','（1）各层的结点个数是ki  (i=0,1,2,....,h)\r\n（2）编号为i的结点的父结点(若存在)的编号是└ (i+k-2)/k」\r\n（3）编号为i的结点的第m个孩子结点(若存在)的编号是(i-1)*k+m+1\r\n（4）当(i-1)%k<>0时有右兄弟， 右兄弟的编号为 i+1\r\n（5）若结点个数为 n ，则高度h和n 的关系为：h=logk(n*(k-1)+1)-1    (n=0时h=-1)\r\n',NULL,3,NULL,'2016-07-22',NULL,1,3,8),(70,'<p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">信息高速公路是指</span></strong><strong><span style=\"font-size:14px;line-height:110%\">(&nbsp; )</span></strong><strong><span style=\"font-size:14px;line-height:110%\">。</span></strong></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">A. Internet&nbsp;&nbsp;&nbsp;&nbsp; B. </span></strong><strong><span style=\"font-size:14px;line-height:110%\">国家信息基础设施 &nbsp; C. 智能化高速公路建设&nbsp;&nbsp;&nbsp;&nbsp; D. 高速公路的信息化建设</span></strong></p><p><br/></p>','A',NULL,3,NULL,'2016-07-22',NULL,1,1,6),(71,'<p><span style=\"font-size:14px;line-height:110%\">计算机网络的基本分类方法主要有两种：一种是根据覆盖范围与规模；另一种是根据(&nbsp; )。</span></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><span style=\"font-size:14px;line-height:110%\">A. </span><span style=\"font-size:14px;line-height: 110%\">网络协议&nbsp;&nbsp;&nbsp; B.网络使用的主机类型&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; C.网络所使用的传输技术&nbsp;&nbsp;&nbsp; D.网络服务器类型与规模</span></p><p><br/></p><p><br/></p>','C',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,6),(72,'<p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">以下关于计算机网络特征的描述中，错误的是(&nbsp; )。</span></strong></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">&nbsp;&nbsp;&nbsp;&nbsp; A. </span></strong><strong><span style=\"font-size:14px;line-height:110%\">计算机网络建立的主要目的是实现资源的共享</span></strong></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">&nbsp;&nbsp;&nbsp;&nbsp; B. </span></strong><strong><span style=\"font-size:14px;line-height:110%\">网络用户可以调用网中多台计算机共同完成某项任务</span></strong></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">&nbsp;&nbsp;&nbsp;&nbsp; C. </span></strong><strong><span style=\"font-size:14px;line-height:110%\">联网计算机既可以联网工作也可以脱网工作</span></strong></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">&nbsp;&nbsp;&nbsp;&nbsp; D. </span></strong><strong><span style=\"font-size:14px;line-height:110%\">联网计算机必须使用统一的操作系统</span></strong></p><p><br/></p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,6),(73,'<p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">计算机网络中通过网络中结点与通信线路之间的几何关系来表示的结构为(&nbsp; )。</span></strong></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">A. </span></strong><strong><span style=\"font-size:14px;line-height: 110%\">网络层次&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B. 协议关系&nbsp;&nbsp;&nbsp;&nbsp; C. 体系结构&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D. 网络拓扑结构</span></strong></p><p><br/></p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,6),(74,'<p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">计算机网络分为局域网、城域网与广域网，其划分的依据是（）。</span></strong></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">A</span></strong><strong><span style=\"font-size:14px;line-height: 110%\">）数据传输所使用的介质&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B）网络的覆盖范围&nbsp;&nbsp;&nbsp; C）网络的控制方式&nbsp;&nbsp;&nbsp;&nbsp; D）网络的拓扑结构</span></strong></p><p><br/></p>','B',NULL,3,NULL,'2016-07-22',NULL,1,1,6),(75,'<p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">下列说法错误的是（）。</span></strong></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">A</span></strong><strong><span style=\"font-size:14px;line-height: 110%\">）网络互联是基础&nbsp;&nbsp;&nbsp;&nbsp; B）网络互通是手段&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; C）网络协议要完全一致&nbsp;&nbsp;&nbsp;&nbsp; D）资源共享是目的</span></strong></p><p><br/></p>','C',NULL,3,NULL,'2016-07-22',NULL,1,1,6),(76,'<p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">下列网中不是按距离划分的是（&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; )</span></strong></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">A</span></strong><strong><span style=\"font-size:14px;line-height: 110%\">）广域网&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B）局域网&nbsp;&nbsp;&nbsp; C）城域网&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D）公用网</span></strong></p><p><br/></p>',' D',NULL,3,NULL,'2016-07-22',NULL,1,1,6),(77,'<p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">计算机网络拓扑结构主要取决于它的（&nbsp;&nbsp;&nbsp; )&nbsp;</span></strong></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">A</span></strong><strong><span style=\"font-size:14px;line-height: 110%\">）资源子网&nbsp;&nbsp;&nbsp;&nbsp; B) FDDI 网&nbsp;&nbsp;&nbsp; C）通信子网&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;D）城域网</span></strong></p><p><br/></p>','C',NULL,3,NULL,'2016-07-22',NULL,1,1,6),(78,'<p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">一个功能完备的计算机网络需要制定套复杂的协议集。对于复杂的计算机网络协议来说，最好的组织方式是（&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; )&nbsp;</span></strong></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">A</span></strong><strong><span style=\"font-size:14px;line-height: 110%\">）连续地址编码模型&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B）层次结构模型&nbsp;&nbsp;&nbsp; C）分布式进程通信模型&nbsp;&nbsp;&nbsp;&nbsp; D）混合结构模型</span></strong></p><p><br/></p>','B',NULL,3,NULL,'2016-07-22',NULL,1,1,6),(79,'<p><strong><span style=\"font-size:14px;font-family:宋体\">计算机网络是以能够相互共享资源的方式互联起来的</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ) </span><span style=\"font-size:14px;font-family:宋体\">系统的集合。</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">&nbsp;</span></strong></p>',' 计算机',NULL,3,NULL,'2016-07-22',NULL,1,2,6),(80,'<p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><strong><span style=\"font-size:14px;line-height:110%\">全球信息化发展的重要标志是建设(&nbsp;&nbsp;&nbsp; )。&nbsp;</span></strong></p><p><br/></p>',' 信息高速公路',NULL,3,NULL,'2016-07-22',NULL,1,2,6),(81,'<p><strong><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">“</span><span style=\"font-size:14px;font-family:宋体\">云</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">”</span><span style=\"font-size:14px;font-family:宋体\">利用了现有服务器的</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\"> (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; )</span><span style=\"font-size:14px;font-family:宋体\">与传统方式相比，</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">“</span><span style=\"font-size:14px;font-family:宋体\">云</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">”</span><span style=\"font-size:14px;font-family:宋体\">所有资源都是动态的。</span>&nbsp;</strong></p>','空闲资源',NULL,3,NULL,'2016-07-22',NULL,1,2,6),(82,'<p><strong><span style=\"font-size:14px;font-family:宋体\">计算机网络是计算机技术和</span><span style=\"font-size: 14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ) </span><span style=\"font-size:14px;font-family:宋体\">技术结合的产物。</span>&nbsp;</strong></p>','通信',NULL,3,NULL,'2016-07-22',NULL,1,2,6),(83,'<p><strong><span style=\"font-size:14px;font-family:宋体\">世界最早投入运行的计算机网络是</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">(&nbsp;&nbsp;&nbsp; )</span><span style=\"font-size:14px;font-family:宋体\">。</span></strong></p>','ARPANET',NULL,3,NULL,'2016-07-22',NULL,1,2,6),(84,'<p><strong><span style=\"font-size:14px;font-family:宋体\">在一个</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">(&nbsp;&nbsp;&nbsp;&nbsp; )</span><span style=\"font-size:14px;font-family:宋体\">拓扑结构中，网络中的每个结点通过一个中央设备连接在一起。</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">&nbsp;&nbsp;</span></strong></p>','星型',NULL,3,NULL,'2016-07-22',NULL,1,2,6),(85,'<p><strong><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">&nbsp;(&nbsp;&nbsp;&nbsp;&nbsp; )</span><span style=\"font-size:14px;font-family:宋体\">指的是专门提供服务的高性能计算机或专用设备，而客户机是用户计算机。</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">&nbsp;&nbsp;&nbsp;</span></strong></p>','服务器',NULL,3,NULL,'2016-07-22',NULL,1,2,6),(86,'<p><span style=\";font-family:SimSun\">在如下数组</span>A<span style=\";font-family:SimSun\">中链接存储了一个线性表，表头指针为</span>A [0].next<span style=\";font-family:SimSun\">，试写出该线性表</span></p><p><span style=\";font-family:SimSun\">&nbsp;A &nbsp; &nbsp;0 &nbsp;1 &nbsp;2 &nbsp;3 &nbsp;4 &nbsp;5 6 &nbsp;7&nbsp;</span></p><p style=\"margin-left:28px\"><span style=\";font-family:SimSun\"></span></p><table><tbody><tr class=\"firstRow\"><td width=\"42\" valign=\"top\" style=\"border: 1px solid; padding: 0mm 7px;\"><p><span style=\";font-family:SimSun\">data</span></p></td><td width=\"4\" valign=\"top\" style=\"border: 1px solid windowtext; padding: 0mm 7px;\"><br/></td><td width=\"10\" valign=\"top\" style=\"border-width: 1px; border-top-color: windowtext; border-right-color: windowtext; border-bottom-color: windowtext; border-style: solid; padding: 0mm 7px;\"><p style=\"text-align:center\"><span style=\";font-family:SimSun\">60</span></p></td><td width=\"10\" valign=\"top\" style=\"border-width: 1px; border-top-color: windowtext; border-right-color: windowtext; border-bottom-color: windowtext; border-style: solid; padding: 0mm 7px;\"><p style=\"text-align:center\"><span style=\";font-family:SimSun\">50</span></p></td><td width=\"10\" valign=\"top\" style=\"border-width: 1px; border-top-color: windowtext; border-right-color: windowtext; border-bottom-color: windowtext; border-style: solid; padding: 0mm 7px;\"><p style=\"text-align:center\"><span style=\";font-family:SimSun\">78</span></p></td><td width=\"10\" valign=\"top\" style=\"border-width: 1px; border-top-color: windowtext; border-right-color: windowtext; border-bottom-color: windowtext; border-style: solid; padding: 0mm 7px;\"><p style=\"text-align:center\"><span style=\";font-family:SimSun\">90</span></p></td><td width=\"10\" valign=\"top\" style=\"border-width: 1px; border-top-color: windowtext; border-right-color: windowtext; border-bottom-color: windowtext; border-style: solid; padding: 0mm 7px;\"><p style=\"text-align:center\"><span style=\";font-family:SimSun\">34</span></p></td><td width=\"10\" valign=\"top\" style=\"border-width: 1px; border-top-color: windowtext; border-right-color: windowtext; border-bottom-color: windowtext; border-style: solid; padding: 0mm 7px;\"><br/></td><td width=\"10\" valign=\"top\" style=\"border-width: 1px; border-top-color: windowtext; border-right-color: windowtext; border-bottom-color: windowtext; border-style: solid; padding: 0mm 7px;\"><p style=\"text-align:center\"><span style=\";font-family:SimSun\">40</span></p></td></tr><tr><td width=\"49\" valign=\"top\" style=\"border: 1px solid; padding: 0mm 7px;\"><p><span style=\";font-family:SimSun\">next</span></p></td><td width=\"4\" valign=\"top\" style=\"border-width: 1px; border-right-color: windowtext; border-bottom-color: windowtext; border-left-color: windowtext; border-style: solid; padding: 0mm 7px;\"><p style=\"text-align:center\"><span style=\";font-family:SimSun\">3</span></p></td><td width=\"10\" valign=\"top\" style=\"border-style: solid; border-width: 1px; border-bottom-color: windowtext; border-right-color: windowtext; padding: 0mm 7px;\"><p style=\"text-align:center\"><span style=\";font-family:SimSun\">5</span></p></td><td width=\"10\" valign=\"top\" style=\"border-style: solid; border-width: 1px; border-bottom-color: windowtext; border-right-color: windowtext; padding: 0mm 7px;\"><p style=\"text-align:center\"><span style=\";font-family:SimSun\">7</span></p></td><td width=\"10\" valign=\"top\" style=\"border-style: solid; border-width: 1px; border-bottom-color: windowtext; border-right-color: windowtext; padding: 0mm 7px;\"><p style=\"text-align:center\"><span style=\";font-family:SimSun\">2</span></p></td><td width=\"10\" valign=\"top\" style=\"border-style: solid; border-width: 1px; border-bottom-color: windowtext; border-right-color: windowtext; padding: 0mm 7px;\"><p style=\"text-align:center\"><span style=\";font-family:SimSun\">0</span></p></td><td width=\"10\" valign=\"top\" style=\"border-style: solid; border-width: 1px; border-bottom-color: windowtext; border-right-color: windowtext; padding: 0mm 7px;\"><p style=\"text-align:center\"><span style=\";font-family:SimSun\">4</span></p></td><td width=\"10\" valign=\"top\" style=\"border-style: solid; border-width: 1px; border-bottom-color: windowtext; border-right-color: windowtext; padding: 0mm 7px;\"><br/></td><td width=\"10\" valign=\"top\" style=\"border-style: solid; border-width: 1px; border-bottom-color: windowtext; border-right-color: windowtext; padding: 0mm 7px; word-break: break-all;\"><p style=\"text-align:center\"><span style=\";font-family:SimSun\">1</span></p></td></tr></tbody></table><p><span style=\";font-family:SimSun\">A[0] A[3] A[2] A[7] A[1] A[5] A[4] A[0]</span></p><p><br/></p>','线性表为：（78，50，40，60，34，90）',NULL,3,NULL,'2016-07-22','2016-07-22',1,3,8),(87,'<p><strong><span style=\"font-size:14px;font-family:宋体\">计算机网络按网络作用范围划分，可分为</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; )</span><span style=\"font-size:14px;font-family:宋体\">、</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; )&nbsp; (&nbsp;&nbsp;&nbsp;&nbsp; )</span><span style=\"font-size:14px;font-family:宋体\">。</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">&nbsp;&nbsp;&nbsp;</span></strong></p>','局域网，城域网，广域网',NULL,3,NULL,'2016-07-22',NULL,1,2,6),(88,'<p style=\"line-height:110%\"><strong><span style=\";line-height:110%\">(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; )</span></strong><strong><span style=\";line-height:110%;font-family: 宋体\">拓扑结构由单根电缆组成，该电缆连接网络中所有结点，其中没有插入其他的连接设备。</span></strong></p><p style=\"line-height:110%\"><br/></p><p><br/></p>','总线型',NULL,3,NULL,'2016-07-22',NULL,1,2,6),(89,'<p style=\"line-height:110%\"><strong><span style=\";line-height:110%;font-family: 宋体\">计算机网络资源都有哪些？</span></strong></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><br/></p><p><br/></p>','所谓计算机网络资源是指计算机网络中的硬件、软件、和数据。',NULL,3,NULL,'2016-07-22',NULL,1,3,6),(90,'<p style=\"line-height:110%\"><strong><span style=\";line-height:110%;font-family: 宋体\">什么是计算机网络的拓扑结构？</span></strong></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><br/></p><p><br/></p>','对不受形状或大小变化影响的几何图形的研究称为拓扑学。\r\n由于计算机网络结构复杂，为了能简单明了认识其中的规律，把计算机网络中的设备抽象为“点”，把网络中的传输介质抽象为“线”，形成了由点和线组成的几何图形，从而抽象出了计算机网络的具体结构，称为计算机网络的拓扑结构。',NULL,3,NULL,'2016-07-22',NULL,1,3,6),(91,'<p style=\"line-height:110%\"><strong><span style=\";line-height:110%;font-family: 宋体\">什么是通信子网和资源子网？各有何作用？</span></strong></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><br/></p><p><br/></p>','通信子网：是由通信控制处理器（CCP）、通信线路、通信协议构成，负责数据传输；\r\n资源子网：由与通信子网互联的主机集合组成资源子网，负责运行程序、提供资源共享等。',NULL,3,NULL,'2016-07-22',NULL,1,3,6),(92,'<p style=\"line-height:110%\"><strong><span style=\";line-height:110%;font-family: 宋体\">什么是</span></strong><strong><span style=\";line-height:110%\">“</span></strong><strong><span style=\";line-height:110%;font-family:宋体\">云计算</span></strong><strong><span style=\";line-height:110%\">”</span></strong><strong><span style=\";line-height:110%;font-family:宋体\">？</span></strong></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><br/></p><p><br/></p>','“云”就是计算机群，“云”会替我们做存储和计算的工作。“云”利用了现有服务器的空闲资源。与传统方式相比，“云”所有资源都是动态的。云计算是分布式计算技术的一种。云计算是分布式处理、并行处理和网格计算的发展。通过网络将庞大的计算处理程序自动分拆成无数个较小的子程序，再交由多部服务器所组成的庞大系统经搜寻、计算分析之后将处理结果回传给用户。',NULL,3,NULL,'2016-07-22',NULL,1,3,6),(93,'<p style=\"line-height:110%\"><strong><span style=\";line-height:110%;font-family: 宋体\">计算机网络的分类有哪些</span></strong><strong><span style=\";line-height:110%\">?</span></strong></p><p style=\";margin-bottom:0;text-align:justify;text-justify: inter-ideograph;line-height:110%\"><br/></p><p><br/></p>','1）按照计算机网络的拓扑结构可以将计算机网络分为：总线型、环型、星型、树型和网状型五大类。\r\n2）按计算机网络作用范围划分：局域网、城域网、广域网\r\n3）按计算机网络传输技术划分：广播式传输网络、点对点传输网络\r\n4）按交换技术划分：电路交换计算机网络、报文交换计算机网络、分组交换计算机网络、混合交换计算机网络。',NULL,3,NULL,'2016-07-22',NULL,1,3,6),(94,'<p style=\"line-height:110%\"><strong><span style=\";line-height:110%;font-family: 宋体\">什么是计算机网络？</span></strong></p><p style=\"margin-bottom: 0px; text-align: justify; line-height: 110%;\"><br/></p>','将分布在不同地理位置的多个具有独立自主功能的计算机系统，通过通信设备和通信线路连接起来，在计算机网络软件的支持下实现资源共享和数据通信的系统。\r\n',NULL,3,NULL,'2016-07-22',NULL,1,3,6),(95,'<p style=\"margin-left:24px\">设计在单链表中删除值相同的多余结点的算法。</p><p><br/></p>','typedef int datatype;\r\ntypedef struct node {datatype data; struct node *next;}lklist;\r\nvoid delredundant(lklist *&head)\r\n{\r\n   lklist *p,*q,*s;\r\n   for(p=head;p!=0;p=p->next)\r\n   {\r\n     for(q=p->next,s=q;q!=0; )\r\n     if (q->data==p->data) {s->next=q->next; free(q);q=s->next;}\r\n     else {s=q,q=q->next;}\r\n   }\r\n}\r\n',NULL,3,NULL,'2016-07-22',NULL,1,3,8),(96,'<p><span style=\"font-size:14px;font-family:SimSun\">设计一个求结点</span><span style=\"font-size: 14px;font-family:&#39;Times New Roman&#39;,serif\">x</span><span style=\"font-size:14px;font-family:SimSun\">在二叉树中的双亲结点算法</span></p>','快速排序、归并排序和插入排序必须等到整个排序结束后才能够求出最小的10个数，而堆排序只需要在初始堆的基础上再进行10次筛选即可，每次筛选的时间复杂度为O(log2n)',NULL,3,NULL,'2016-07-22',NULL,1,3,8),(97,'<p style=\"line-height:21px\"><span style=\"font-size:16px;font-family:SimSun\">如果想在</span><span style=\"font-size:16px;font-family:SimSun\">4092</span><span style=\"font-size:16px;font-family:SimSun\">个数据中只需要选择其中最小的</span><span style=\"font-size:16px;font-family:SimSun\">5</span><span style=\"font-size:16px;font-family:SimSun\">个，采用（</span><span style=\"font-size:16px;font-family:SimSun\">&nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-size:16px;font-family:SimSun\">）方法最好。</span></p><p style=\"line-height:21px\"><span style=\"font-size:16px;font-family:SimSun\">&nbsp;&nbsp; A&nbsp; </span><span style=\"font-size:16px;font-family:SimSun\">起泡排序</span><span style=\"font-size:16px;font-family:SimSun\">&nbsp; &nbsp; &nbsp;B&nbsp; </span><span style=\"font-size:16px;font-family:SimSun\">堆排序 &nbsp;</span><span style=\"font-size:16px;font-family:SimSun\">&nbsp; &nbsp; &nbsp;<span style=\"color:red\">C&nbsp; </span></span><span style=\"font-size:16px;font-family:SimSun;color:red\">锦标赛排序 &nbsp;</span><span style=\"font-size:16px;font-family:SimSun;color:red\">&nbsp;&nbsp;</span><span style=\"font-size:16px;font-family:SimSun\">&nbsp; D &nbsp;</span><span style=\"font-size:16px;font-family:SimSun\">快速排序</span><span style=\"font-size:16px;font-family:SimSun\">&nbsp;&nbsp;</span></p><p><br/></p>',' C ',NULL,3,NULL,'2016-07-22',NULL,1,1,8),(98,'<p style=\"line-height:21px\"><span style=\"font-size:16px;font-family:SimSun\">在数组</span><em><span style=\"font-size:16px;font-family:SimSun\">A</span></em><span style=\"font-size:16px;font-family:SimSun\">中，每一个数组元素</span><em><span style=\"font-size:16px;font-family:SimSun\">A</span></em><span style=\"font-size:16px;font-family:SimSun\">[i][j]占用3个存储字，行下标</span><em><span style=\"font-size:16px;font-family:SimSun\">i</span></em><span style=\"font-size:16px;font-family:SimSun\">从1到8，列下标</span><em><span style=\"font-size:16px;font-family:SimSun\">j</span></em><span style=\"font-size:16px;font-family:SimSun\">从1到10。所有数组元素相继存放于一个连续的存储空间中，则存放该数组至少需要的存储字数是（&nbsp; &nbsp; &nbsp;&nbsp;）。</span></p><p style=\"line-height:21px\"><span style=\"font-size:16px;font-family:SimSun\">A&nbsp;&nbsp; 80 &nbsp; &nbsp; &nbsp;B&nbsp;&nbsp; 100 &nbsp; &nbsp; &nbsp;<span style=\"color:red\">&nbsp;</span>C&nbsp;&nbsp; 240 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; D&nbsp; 270</span></p><p><br/></p>',' C ',NULL,3,NULL,'2016-07-22',NULL,1,1,8),(99,'<p style=\"margin: 7px 0mm\"><span style=\"font-size:16px;font-family:SimSun\">算法分析的目的是</span><span style=\"font-size:16px;font-family:SimSun\">( &nbsp; &nbsp;)</span><span style=\"font-size:16px;font-family:SimSun\">。</span></p><p><span style=\"font-size: 16px; font-family: SimSun;\">A</span><span style=\"font-size: 16px;\">&nbsp;&nbsp;</span><span style=\"font-size: 16px; font-family: SimSun;\">找出数据结构的合理性</span></p><p><span style=\"font-size:16px;font-family:SimSun\">B</span><span style=\"font-size:16px\">&nbsp;&nbsp;</span><span style=\"font-size:16px;font-family:SimSun\">研究算法中输入和输出的关系</span></p><p><span style=\"font-size:16px;font-family:SimSun\">C</span><span style=\"font-size:16px\">&nbsp;&nbsp;</span><span style=\"font-size:16px;font-family:SimSun\">分析算法的效率以求改进</span></p><p><span style=\"font-size:16px;font-family:SimSun\">D</span><span style=\"font-size:16px\">&nbsp;&nbsp;</span><span style=\"font-size:16px;font-family:SimSun\">分析算法的易懂性和文档性</span></p><p><br/></p>','A',NULL,3,NULL,'2016-07-22',NULL,1,1,8),(100,'<p style=\"margin: 7px 0mm\"><span style=\"font-size:16px;font-family:SimSun\">下面程序段的时间复杂度为（</span><span style=\"font-size: 16px;font-family:SimSun\">&nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-size:16px;font-family:SimSun\">）</span></p><p style=\"margin: 7px 0mm\"><span style=\"font-size:16px;font-family:SimSun\">&nbsp; int&nbsp; f(unsigned&nbsp; int&nbsp; n) {</span></p><p style=\"margin: 7px 0mm\"><span style=\"font-size:16px;font-family:SimSun\">&nbsp; if(n= =0 || n= =1)&nbsp; return 1;</span></p><p style=\"margin: 7px 0mm\"><span style=\"font-size:16px;font-family:SimSun\">&nbsp; else&nbsp; return&nbsp; n*f(n-1);</span></p><p style=\"margin: 7px 0mm\"><span style=\"font-size:16px;font-family:SimSun\">}&nbsp;</span></p><p style=\"margin: 7px 0mm\"><span style=\"font-size:16px;font-family:SimSun\">A&nbsp;&nbsp; O(1) &nbsp; &nbsp; &nbsp; B <span style=\"color:red\">&nbsp;</span>O(n)<span style=\"color:red\"> &nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp; &nbsp;C&nbsp;&nbsp; O(n<sup>2</sup>) &nbsp; &nbsp; &nbsp; &nbsp;D&nbsp;&nbsp; O(n<sup> </sup>!)</span></p><p><br/></p>','B ',NULL,3,NULL,'2016-07-22',NULL,1,2,7),(101,'<p>一道比较较易的操作系统选择题（）</p><p>&nbsp; A.确实简单 &nbsp; &nbsp; &nbsp;B.不错</p><p>&nbsp; C.假的 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;D.太简单</p>','C',NULL,2,NULL,'2016-07-22','2016-07-22',1,1,9),(102,'<p><span style=\"font-family:宋体\">设有一个线性表</span> (e<sub>0</sub>, e<sub>1</sub>, <span style=\"font-family:宋体\">…</span>, e<sub>n-2</sub>, e<sub>n-1</sub>) <span style=\"font-family:宋体\">存放在一个一维数组</span>A[arraysize]<span style=\"font-family:宋体\">中的前</span>n<span style=\"font-family: 宋体\">个数组元素位置。请编写一个函数将这个线性表原地逆置，即将数组的前</span>n<span style=\"font-family:宋体\">个原址内容置换为</span> (e<sub>n-1</sub>, e<sub>n-2</sub>, <span style=\"font-family:宋体\">…</span>, e<sub>1</sub>, e<sub>0</sub>)<span style=\"font-family:宋体\">。</span></p><p><br/></p>','数组原地逆置算法\r\n参数表中给出数组A[ ] 及指定的数组中前n个元素，函数执行后从A[ ] 中得到数组原地逆置后的结果。\r\nTemplate<class T>\r\nvoid inverse ( T A[ ], int n )\r\n{     T tmp;\r\nfor ( int I = 0; I <= ( n-1 ) / 2; I++ )\r\n{     tmp = A[I];  A[I] = A[n-I-1];  A[n-I-1] = tmp;}\r\n}\r\n',NULL,3,NULL,'2016-07-22',NULL,1,3,7),(103,'<p><span style=\"font-family:宋体\">设有两个整数类型的顺序表</span>A<span style=\"font-family:宋体\">（有</span> m<span style=\"font-family: 宋体\">个元素）和</span>B<span style=\"font-family:宋体\">（有</span>n<span style=\"font-family:宋体\">个元素），其元素均以从小到大的升序排列。试编写一个函数，将这两个顺序表合并成一个顺序表</span>C<span style=\"font-family:宋体\">，要求</span>C<span style=\"font-family:宋体\">的元素也以从小到大的升序排列。</span></p><p><br/></p><p><br/></p>','合并两个升序排列的顺序表的算法\r\n参数表给出参加运算的三个顺序表A、B与C。从C中得到执行结果。\r\n算法中用到顺序表的4个共有函数：Length( ) 求表的当前长度；maxLength( ) 求表的最大允许长度；getData(k) 提取第k个元素的值；setData(k) 修改第k个元素的值。    \r\nTemplate <class T>\r\nvoid merge ( SeqList<int>& A, SeqList<int>& B, SeqList<int>& C )\r\n{     int m = A.Length( ), n = B.Length( ), mpn = m + n;\r\nif ( mpn > C.maxLength( ) )\r\n{     cerr << “合并后表的长度超出表的最大允许长度” << endl;\r\nexit (1);\r\n}           \r\nint I = 0, j = 0, k = 0, av = A.getData(I), bv = B.getData(j);\r\nwhile ( I < m && j < n )\r\nif ( av <= bv )\r\n{     C.setData(k++, av); av = A.getData(++I); }\r\nelse\r\n{     C.setData(k++, bv); B.getData(++j); }\r\nif ( I < m )\r\nwhile ( k < mpn ) { C.setData(k++, av); av = A.getData(++I); }\r\nelse\r\nwhile ( k < mpn ) { C.setData(k++, bv); B.getData(++j); }\r\n}',NULL,3,NULL,'2016-07-22',NULL,1,3,7),(104,'<p><span style=\"font-family:宋体\">已知一个带表头结点的单链表中包含有三类字符（数字字符、字母字符和其他字符），试编写一个函数，构造三个新的单链表，使每个单链表中只包含同一类字符。要求使用原表的空间，表头结点可以另辟空间。</span></p><p><br/></p><p><br/></p>','算法如下\r\ntypedef char elemType;\r\nvoid Separate ( ListNode * LA, ListNode * LB, ListNode * LC )\r\n{                                               //原来的单链表是LA, 新的三个单链表是LA, LB, LC\r\nListNode * p = LA->link;                                                             \r\nListNode * pa = LA, * pb = LB, * pc = LC;\r\nwhile ( p != NULL )\r\n{     if ( isdigit (p->data) ) { pa->link = p;  pa = p; }                     \r\nelse if ( isalpha (p->data) )\r\n{     pb->link = p;  pb = p; }                                                       \r\nelse\r\n{     pc->link = p;  pc = p; }                                                       \r\np = p->link;\r\n}\r\npa->link = NULL;  pb->link = NULL;  pc->link = NULL;            \r\n}',NULL,3,NULL,'2016-07-22',NULL,1,3,7),(105,'<p><span style=\"font-family:宋体\">一颗具有</span>n<span style=\"font-family:宋体\">个结点的完全二叉树以顺序方式存储在数组</span>A<span style=\"font-family:宋体\">中，设计一个算法构造该二叉树的二叉链存储结构。</span></p><p><br/></p>','算法如下\r\nvoid ctree(BTNode *&t,ElemType a[],int i,int n)\r\n{   if(i>n)\r\n       t=NULL;\r\n    else\r\n    {   t=(BTNode*)malloc(sizeof(BTNode));\r\n        t->data=a[i-1];\r\n        ctree(t->lchild,a,2*i,n);\r\n        ctree(t->rchild,a,2*i+1,n);\r\n    }\r\n}\r\n',NULL,3,NULL,'2016-07-22',NULL,1,3,7),(106,'<p><span style=\"font-family:宋体\">编写一个算法</span>frequency<span style=\"font-family:宋体\">，统计在一个输入字符串中各个不同字符出现的频度。算法返回两个数组：</span>A[ ]<span style=\"font-family:宋体\">记录字符串中有多少种不同的字符，</span>C[ ]<span style=\"font-family:宋体\">记录每一种字符的出现次数。此外，还要返回不同字符数。</span></p><p><br/></p><p><br/></p>','求输入字符串中各种不同字符出现频度的算法\r\n由于需要返回多种信息，参数表中引入引用参数：A[ ]中记录字符串中有多少种不同的字符，C[ ]中记录每一种字符的出现次数，k返回不同字符数。\r\n#include <iostream.h>\r\n#include \"string1.h\"\r\nvoid frequency( String& s, char A[ ], int C[ ], int &k )\r\n{     int I, j, len = s.Length( );\r\nif ( !len )\r\n{     cout << \"The string is empty. \" << endl;  k = 0;  return; }\r\nelse\r\n{     A[0] = s[0];  C[0] = 1;  k = 1;\r\nfor ( I = 1; I < len; I++ ) C[I] = 0;\r\n             for ( I = 1; I < len; I++ )\r\n{     for ( j = 0; j < k && A[j] != s[I]; j++ );\r\nif ( j == k )\r\n{      A[k] = s[I]; C[k]++; k++; }\r\nelse\r\nC[j]++;\r\n}\r\n}\r\n}',NULL,3,NULL,'2016-07-22',NULL,1,3,7),(107,'<p><span style=\"font-family:宋体\">已知二叉树中的结点类型用</span>BinTreeNode<span style=\"font-family:宋体\">表示，被定义为</span>:</p><p>struct BinTreeNode { char data;&nbsp;&nbsp;&nbsp; BinTreeNode *leftChild, *rightChild; };</p><p><span style=\"font-family:宋体\">其中</span>data<span style=\"font-family:宋体\">为结点值域，</span>leftChild<span style=\"font-family:宋体\">和</span>rightChild<span style=\"font-family:宋体\">分别为指向左、右子女结点的指针域，根据下面函数声明编写出求一棵二叉树高度的算法，该高度由函数返回。假定根结点的层次为</span>0<span style=\"font-family:宋体\">，参数</span>BT<span style=\"font-family:宋体\">初始指向这棵二叉树的根结点。</span>Int BTreeHeight ( BinTreeNode* BT );</p><p><br/></p>','算法如下\r\nint BTreeHeight ( BinTreeNode* BT )\r\n{     if ( BT == NULL ) return –1;                          //对于空树，返回-1并结束递归，\r\nelse\r\n{     int h1 = BTreeHeight ( BT->leftChild );             //计算左子树的高度，\r\nint h2 = BTreeHeight (BT->rightChild );             //计算右子树的高度，\r\nif ( h1 > h2 )\r\nreturn h1+1; \r\nelse\r\nreturn h2+1;                                       //返回树的高度，\r\n}\r\n}\r\n',NULL,3,NULL,'2016-07-22',NULL,1,3,7),(108,'<p><span style=\"font-family:宋体\">已知二叉树中的结点类型用</span>BinTreeNode<span style=\"font-family:宋体\">表示，被定义为</span>:</p><p>struct BTreeNode { char data;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BinTreeNode *leftChild, *rightChild; };</p><p><span style=\"font-family:宋体\">其中</span>data<span style=\"font-family:宋体\">为结点值域，</span>leftChild<span style=\"font-family:宋体\">和</span>rightChild<span style=\"font-family:宋体\">分别为指向左、右子女结点的指针域，根据下面函数声明编写出求一棵二叉树中结点总数的算法，该总数值由函数返回。假定参数</span>BT<span style=\"font-family:宋体\">初始指向这棵二叉树的根结点。</span>Int BTreeCount ( BinTreeNode* BT );</p><p><br/></p>','算法如下\r\nint BTreeCount ( BinTreeNode* BT )\r\n{     if ( BT == NULL ) return 0;                                                                                    \r\nelse\r\nreturn BTreeCount ( BT->leftChild ) + BTreeCount ( BT->rightChild ) + 1;    \r\n}\r\n',NULL,3,NULL,'2016-07-22',NULL,0,3,7),(109,'<p>Java 选择题( )</p><p>&nbsp; A. 1 &nbsp; &nbsp;B. 2</p><p>&nbsp; C. 3 &nbsp; &nbsp;D. 4</p>','D',NULL,2,NULL,'2016-07-22','2016-07-22',1,1,2),(110,'<p style=\"line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">应用</span><span style=\"font-size:16px;line-height:150%\">Johnson</span><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">法则的流水作业调度采用的算法是（</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）</span></p><p style=\"text-indent:32px;line-height:150%\"><span style=\"font-size:16px;line-height:150%\">A. </span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">贪心算法</span><span style=\"font-size:16px;line-height:150%\">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; B. </span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">分支限界法</span><span style=\"font-size:16px;line-height:150%\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; C.</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">分治法</span><span style=\"font-size:16px;line-height:150%\">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D. </span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">动态规划算法</span></p><p><br/></p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(111,'<p style=\"line-height: 150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">动态规划算法的基本要素为（）</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">A. </span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">最优子结构性质与贪心选择性质</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">B</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">．重叠子问题性质与贪心选择性质</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">C</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">．最优子结构性质与重叠子问题性质</span></p><p style=\"line-height:150%\"><span style=\"font-size: 13px;line-height:150%;font-family:楷体_GB2312;display:none\">&nbsp;</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">D. </span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">预排序与递归调用</span></p><p><br/></p>','C',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(112,'<p>欲构造ArrayList类的一个实例，此类继承了List接口，下列哪个方法是正确的 ？( )</p><p>&nbsp;A ArrayList myList=new Object（） &nbsp;B List myList=new ArrayList（） &nbsp;</p><p>&nbsp;C ArrayList myList=new List（） &nbsp; &nbsp;D List myList=new List（）</p>','B',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,2),(113,'<p style=\"line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">算法分析中，记号</span><span style=\"font-size:16px;line-height:150%\">O</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">表示（</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">），</span> <span style=\"font-size:16px;line-height:150%;font-family:宋体\">记号</span><span style=\"font-size:16px;line-height:150%\"><span style=\"position:relative;top:3px\"><img width=\"17\" height=\"17\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">表示（</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">），</span> <span style=\"font-size:16px;line-height:150%;font-family:宋体\">记号</span><span style=\"font-size:16px;line-height:150%\"><span style=\"position:relative;top:4px\"><img width=\"17\" height=\"19\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">表示（</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">A.</span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">渐进下界</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">B.</span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">渐进上界</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">C.</span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">非紧上界</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">D.</span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">紧渐进界</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">E.</span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">非紧下界</span></p><p><br/></p>','BAD',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(114,'<p style=\"line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">以下关于渐进记号的性质是正确的有：（</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）</span></p><p><span style=\"font-size:16px\">A.<span style=\"position:relative;top:7px\"><img width=\"319\" height=\"21\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span></span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">B. <span style=\"position:relative;top:7px\"><img width=\"317\" height=\"21\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span></span></p><p><span style=\"font-size:16px\">C. O(f(n))+O(g(n)) = O(min{f(n),g(n)}) </span></p><p><span style=\"font-size:16px;font-family:&#39;Arial Unicode MS&#39;,&#39;sans-serif&#39;;display:none\">&nbsp;</span></p><p><span style=\"font-size:16px\">D. <span style=\"position:relative;top:7px\"><img width=\"217\" height=\"21\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span></span></p><p><br/></p>','A',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(115,'<p style=\"line-height: 150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">能采用贪心算法求最优解的问题，一般具有的重要性质为：（）</span></p><p style=\"text-indent:120px;line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">A. </span><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">最优子结构性质与贪心选择性质</span></p><p style=\"text-indent:120px;line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">B</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">．重叠子问题性质与贪心选择性质</span></p><p style=\"text-indent:120px;line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">C</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">．最优子结构性质与重叠子问题性质</span></p><p style=\"text-indent:100px;line-height:150%\"><span style=\"font-size:13px;line-height:150%;font-family:楷体_GB2312;display:none\">&nbsp;</span></p><p style=\"text-indent:120px;line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">D. </span><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">预排序与递归调用</span></p><p><br/></p>','A',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(116,'<p><span style=\"font-size:16px;font-family:宋体\">回溯法在问题的解空间树中，按（）策略，从根结点出发搜索解空间树。</span></p><p style=\"margin-left:75px;line-height: 150%\"><span style=\"font-size:16px;line-height:150%\">A．<span style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">广度优先</span><span style=\"font-size:16px;line-height:150%\"> B. </span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">活结点优先</span><span style=\"font-size:16px;line-height:150%\">&nbsp; C.</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">扩展结点优先</span><span style=\"font-size:16px;line-height:150%\">&nbsp; D. </span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">深度优先</span></p><p><br/></p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(117,'<p><span style=\"font-size:16px;font-family:宋体\">分支限界法在问题的解空间树中，按（）策略，从根结点出发搜索解空间树。</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">&nbsp;&nbsp;&nbsp;&nbsp; A</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">．</span> <span style=\"font-size:16px;line-height:150%;font-family:宋体\">广度优先</span><span style=\"font-size:16px;line-height:150%\"> B. </span><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">活结点优先</span><span style=\"font-size:16px;line-height:150%\">&nbsp; C.</span><span style=\"font-size:16px;line-height:150%;font-family: 宋体\">扩展结点优先</span><span style=\"font-size:16px;line-height:150%\">&nbsp; D. </span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">深度优先</span></p><p><br/></p>','A',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(118,'<p style=\"line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">回溯法的效率不依赖于以下哪一个因素？（</span><span style=\"font-size:16px;line-height:150%\">&nbsp;</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）</span></p><p style=\"margin: 8px 0 0 32px;text-indent: 64px\"><span style=\"font-size:16px\">A.<span style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:16px;font-family:宋体\">产生</span><span style=\"font-size:16px\">x[k]</span><span style=\"font-size:16px;font-family:宋体\">的时间；</span></p><p style=\"margin-top:8px;margin-right:0;margin-bottom:0;margin-left:32px;margin-bottom:0;text-indent:64px\"><span style=\"font-size:16px\">B. </span><span style=\"font-size:16px;font-family:宋体\">满足显约束的</span><span style=\"font-size:16px\">x[k]</span><span style=\"font-size:16px;font-family: 宋体\">值的个数；</span></p><p style=\"margin-top:8px;margin-right:0;margin-bottom:0;margin-left:32px;margin-bottom:0;text-indent:64px\"><span style=\"font-size:16px\">C. </span><span style=\"font-size:16px;font-family:宋体\">问题的解空间的形式；</span> </p><p style=\"margin-top:8px;margin-right:0;margin-bottom:0;margin-left:32px;margin-bottom:0;text-indent:64px\"><span style=\"font-size:16px\">D.<span style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:16px;font-family:宋体\">计算上界函数</span><span style=\"font-size:16px\">bound</span><span style=\"font-size:16px;font-family:宋体\">的时间；</span></p><p style=\"margin-top:8px;margin-right:0;margin-bottom:0;margin-left:32px;margin-bottom:0;text-indent:64px\"><span style=\"font-size:16px\">E. </span><span style=\"font-size:16px;font-family:宋体\">满足约束函数和上界函数约束的所有</span><span style=\"font-size:16px\">x[k]</span><span style=\"font-size:16px;font-family:宋体\">的个数。</span></p><p style=\"margin-top:8px;margin-right:0;margin-bottom:0;margin-left:32px;margin-bottom:0;text-indent:64px\"><span style=\"font-size:16px\">F.<span style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp; </span></span><span style=\"font-size:16px;font-family:宋体\">计算约束函数</span><span style=\"font-size:16px\">constraint</span><span style=\"font-size:16px;font-family:宋体\">的时间；</span></p><p><br/></p>','C',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(119,'<p style=\"line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">常见的两种分支限界法为（</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">A. </span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">广度优先分支限界法与深度优先分支限界法；</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">B. </span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">队列式（</span><span style=\"font-size:16px;line-height:150%\">FIFO</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）分支限界法与堆栈式分支限界法；</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">C. </span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">排列树法与子集树法；</span></p><p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%\">D. </span><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">队列式（</span><span style=\"font-size:16px;line-height:150%\">FIFO</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）分支限界法与优先队列式分支限界法；</span></p><p><br/></p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(120,'<p style=\"line-height:150%\"><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">k</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">带图灵机的空间复杂性S(n)是指（）</span></p><p style=\"margin-left: 32px;line-height: 150%\"><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">A.<span style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">k</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">带图灵机处理所有长度为n的输入时，在某条带上所使用过的最大方格数。</span></p><p style=\"margin-left: 32px;line-height: 150%\"><span style=\"font-size: 16px;line-height:150%;font-family:宋体;display:none\">B.<span style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">k</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">带图灵机处理所有长度为n的输入时，在k条带上所使用过的方格数的总和</span></p><p style=\"margin-left:32px;line-height: 150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">C.<span style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">。</span></p><p style=\"margin-left:32px;line-height: 150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">C.<span style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">k</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">带图灵机处理所有长度为n的输入时，在k条带上所使用过的平均方格数。</span></p><p style=\"margin-left:32px;line-height: 150%\"><span style=\"font-size:16px;line-height:150%\">D.<span style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">k</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">带图灵机处理所有长度为n的输入时，在某条带上所使用过的最小方格数。</span></p><p><br/></p>','B',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(121,'<p style=\"line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">记号</span><span style=\"font-size:16px;line-height:150%\">O</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的定义正确的是（</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）。</span></p><p style=\"margin: 8px 0 0 32px;line-height: 150%\"><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">A.<span style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">O(g(n)) = { f(n) | </span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">存在正常数c和n0使得对所有n<span style=\"position:relative;top:3px\"><img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span>n<sub>0</sub>有：0<span style=\"position:relative;top:3px\"><img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span>&nbsp;f(n) <span style=\"position:relative;top:3px\"><img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span>&nbsp;cg(n) }；</span></p><p style=\"margin: 8px 0 0 32px;line-height: 150%\"><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">B.<span style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">O(g(n)) = { f(n) | </span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">存在正常数c和n0使得对所有n<span style=\"position:relative;top:3px\"><img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span>n<sub>0</sub>有：0<span style=\"position:relative;top:3px\"><img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span>&nbsp;cg(n) <span style=\"position:relative;top:3px\"><img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span>&nbsp;f(n) }；</span></p><p style=\"margin: 8px 0 0 32px;line-height: 150%\"><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">C.<span style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">O(g(n)) = { f(n) | </span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对于任何正常数c&gt;0，存在正数和n<sub>0 </sub>&gt;0使得对所有n<span style=\"position:relative;top:3px\"><img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span>n<sub>0</sub>有：0 <span style=\"position:relative;top:3px\"><img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span>f(n)&lt;cg(n) }；</span></p><p style=\"margin: 8px 0 0 32px;line-height: 150%\"><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">D.<span style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">O(g(n)) = { f(n) | </span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对于任何正常数c&gt;0，存在正数和n<sub>0</sub> &gt;0使得对所有n<span style=\"position:relative;top:3px\"><img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span>n<sub>0</sub>有：0 <span style=\"position:relative;top:3px\"><img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span>cg(n) &lt; f(n) }；</span></p><p><br/></p>','A',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(122,'<p>paint()方法使用哪种类型的参数? ( )</p><p>&nbsp;A Graphics &nbsp;B Graphics2D&nbsp;</p><p>&nbsp;C String &nbsp; &nbsp;D Color&nbsp;</p><p><br/></p>','A',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,2),(123,'<p style=\"line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">记号</span><span style=\"font-size:16px;line-height:150%\"><span style=\"position:relative;top:3px\"><img width=\"17\" height=\"17\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">的定义正确的是（</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）。</span></p><p style=\"margin: 8px 0 0 32px;line-height: 150%\"><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">A.<span style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">O(g(n)) = { f(n) | </span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">存在正常数c和n0使得对所有n<span style=\"position:relative;top:3px\"><img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span>n<sub>0</sub>有：0<span style=\"position:relative;top:3px\"><img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span>&nbsp;f(n) <span style=\"position:relative;top:3px\"><img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span>&nbsp;cg(n) }；</span></p><p style=\"margin: 8px 0 0 32px;line-height: 150%\"><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">B.<span style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">O(g(n)) = { f(n) | </span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">存在正常数c和n0使得对所有n<span style=\"position:relative;top:3px\"><img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span>n<sub>0</sub>有：0<span style=\"position:relative;top:3px\"><img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span>&nbsp;cg(n) <span style=\"position:relative;top:3px\"><img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span>&nbsp;f(n) }；</span></p><p style=\"margin: 8px 0 0 32px;line-height: 150%\"><span style=\"font-size: 16px;line-height:150%;font-family:宋体\">C.<span style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">(g(n)) = { f(n) | </span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对于任何正常数c&gt;0，存在正数和n<sub>0 </sub>&gt;0使得对所有n<span style=\"position:relative;top:3px\"><img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span>n<sub>0</sub>有：0 <span style=\"position:relative;top:3px\"><img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span>f(n)&lt;cg(n) }；</span></p><p style=\"margin-top:3px;margin-right:0;margin-bottom:0;margin-left:32px;margin-bottom:0;line-height:150%\"><span style=\"font-size:16px;line-height:150%\">D.<span style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">(g(n)) = { f(n) | </span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">对于任何正常数c&gt;0，存在正数和n<sub>0</sub> &gt;0使得对所有n<span style=\"position:relative;top:3px\"><img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span>n<sub>0</sub>有：0 <span style=\"position:relative;top:3px\"><img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/></span>cg(n) &lt; f(n) }；</span></p><p><br/></p>','B',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(124,'<p style=\"margin-left:52px;line-height: 150%\"><span style=\"font-size:16px;line-height:150%\">1.<span style=\"font-variant-numeric: normal;font-stretch: normal;font-size: 9px;line-height: normal;font-family: &#39;Times New Roman&#39;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">所谓贪心选择性质是指（）。</span></p><p><br/></p>','所求问题的整体最优解可以通过一系列局部最优的选择，即贪心选择来达到',NULL,3,NULL,'2016-07-22',NULL,1,2,7),(125,'<p style=\"margin-left:52px;line-height: 150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">所谓最优子结构性质是指（）。</span></p><p><br/></p>','问题的最优解包含了其子问题的最优解',NULL,3,NULL,'2016-07-22',NULL,1,3,7),(126,'<p style=\"margin-left:52px;line-height: 150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">回溯法是</span><span style=\"font-size:16px;line-height:150%;font-family:宋体;display:none\">回溯法是</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">指（）。</span></p><p><br/></p>','具有限界函数的深度优先生成法',NULL,3,NULL,'2016-07-22',NULL,1,2,7),(127,'<p style=\"margin-left: 48px;line-height: 150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">用回溯法解题的一个显著特征是在搜索过程中动态产生问题的解空间。在任何时刻，算法只保存从根结点到当前扩展结点的路径。</span></p><p style=\"margin-left: 48px;text-indent: 12px;line-height: 150%\"><span style=\"font-size:16px;line-height: 150%;font-family:宋体\">如果解空间树&nbsp;&nbsp; 中从根结点到叶结点的最长路径的长度为h(n)，则回溯法所需的计算空间通常为（)</span></p><p style=\"text-indent: 24px;line-height: 150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）。</span></p><p><br/></p>','O(h(n)',NULL,3,NULL,'2016-07-22',NULL,1,2,7),(128,'<p>指出正确的表达式( )</p><p>&nbsp;A byte=128; &nbsp;</p><p>&nbsp;B Boolean=null; &nbsp;</p><p>&nbsp;C long l=0xfffL; &nbsp;</p><p>&nbsp;D double=0.9239d;</p>','C',NULL,3,NULL,'2016-07-22',NULL,1,1,2),(129,'<p>要从文件&quot; file.dat&quot;文件中读出第10个字节到变量C中,下列哪个方法适合? ( )<br/></p><p>&nbsp;A FileInputStream in=new FileInputStream(&quot;file.dat&quot;); in.skip(9); int c=in.read();&nbsp;</p><p>&nbsp;B FileInputStream in=new FileInputStream(&quot;file.dat&quot;); in.skip(10); int c=in.read(); &nbsp;</p><p>&nbsp;C FileInputStream in=new FileInputStream(&quot;file.dat&quot;); int c=in.read(); &nbsp;</p><p>&nbsp;D RandomAccessFile in=new RandomAccessFile(&quot;file.dat&quot;); in.skip(9); int c=in.readByte();</p>','A',NULL,3,NULL,'2016-07-22','2016-07-22',1,1,2),(130,'<p><span style=\";font-family:宋体\">衡量一个算法好坏的标准是（ &nbsp;）。</span></p><p><span style=\";font-family:宋体\">（A）运行速度快&nbsp;&nbsp;&nbsp; （B）占用空间少&nbsp;&nbsp;&nbsp;&nbsp; （C）时间复杂度低 （D）代码短</span></p><p><br/></p>','C',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(131,'<p>容器被重新设置大小后，哪种布局管理器的容器中的组件大小不随容器大小的变化而改变？ &nbsp;</p><p>&nbsp;A CardLayout &nbsp; &nbsp;B FlowLayout &nbsp;</p><p>&nbsp;C BorderLayout &nbsp;D GridLayout&nbsp;</p><p><br/></p>','B',NULL,3,NULL,'2016-07-22',NULL,1,1,1),(132,'<p><span style=\";font-family:宋体\">记号O的定义正确的是（）。</span></p><p><span style=\";font-family:宋体\">（A）O(g(n)) = { f(n) | 存在正常数c和n0使得对所有n<img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/>n0有：0<img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/> f(n) <img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/>&nbsp;cg(n) }；</span></p><p><span style=\";font-family:宋体\">（B）O(g(n)) = { f(n) | 存在正常数c和n0使得对所有n<img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/>n0有：0<img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/> cg(n) <img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/>&nbsp;f(n) }；</span></p><p><span style=\";font-family:宋体\">（C）O(g(n)) = { f(n) | 对于任何正常数c&gt;0，存在正数和n0 &gt;0使得对所有n<img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/>n0</span></p><p style=\"text-indent:42px\"><span style=\";font-family:宋体\">有：0 <img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/>f(n)&lt;cg(n) }；</span></p><p><span style=\";font-family:宋体\">（D）O(g(n)) = { f(n) | 对于任何正常数c&gt;0，存在正数和n0 &gt;0使得对所有n<img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/>n0</span></p><p style=\"text-indent:42px\"><span style=\";font-family:宋体\">有：0 <img width=\"13\" height=\"16\" src=\"http://10.167.158.98:8080/themes/default/images/spacer.gif\"/>cg(n) &lt; f(n) }；</span></p><p><br/></p>','A',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(133,'<p><span style=\";font-family:宋体\">二分搜索算法是利用（ &nbsp; &nbsp; ）实现的算法。</span></p><p><span style=\"font-family:宋体\">（A）分治策略&nbsp;&nbsp; （B）动态规划法&nbsp;&nbsp; （C）贪心法&nbsp;&nbsp;&nbsp; （D）回溯法</span></p><p><br/></p>','  A  ',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(134,'<p><span style=\";font-family:宋体\">使用分治法求解不需要满足的条件是（ ）。</span></p><p><span style=\"font-family:宋体\">（A）子问题必须是一样的&nbsp;&nbsp;&nbsp;&nbsp; （B）子问题不能够重复</span></p><p><span style=\"font-family:宋体\">（C）子问题的解可以合并&nbsp;&nbsp;&nbsp;&nbsp; （D）原问题和子问题使用相同的方法解</span></p><p><br/></p>','A',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(135,'<p><span style=\";font-family:宋体\">合并排序算法是利用（ &nbsp; ）实现的算法。</span></p><p><span style=\";font-family:宋体\">（A）分治策略&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; （B）动态规划法&nbsp;&nbsp;&nbsp;&nbsp; （C）贪心法 &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;（D）回溯法</span></p><p><br/></p>','A ',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(136,'<p>那个语句是正确的？( )&nbsp;</p><p>&nbsp;A 编译时将产生错误； &nbsp;</p><p>&nbsp;B 编译时正确，运行时将产生错误； &nbsp;</p><p>&nbsp;C 输出零； &nbsp;</p><p>&nbsp;D 输出空。</p><p><br/></p>','C',NULL,3,NULL,'2016-07-22',NULL,1,1,2),(137,'<p><span style=\";font-family:宋体\">实现大整数的乘法是利用（ &nbsp;）的算法。</span></p><p><span style=\";font-family:宋体\">（A）贪心法&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; （B）动态规划法&nbsp;&nbsp;&nbsp;&nbsp; （C）分治策略&nbsp;&nbsp; &nbsp;&nbsp; （D）回溯法</span></p><p><br/></p>','C ',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(138,'<p><span style=\";font-family:宋体\">以下不可以使用分治法求解的是（ &nbsp;）。</span></p><p><span style=\";font-family:宋体\">（A）棋盘覆盖问题&nbsp;&nbsp; （B）选择问题&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; （C）归并排序&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; （D） 0/1背包问题</span></p><p><br/></p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(139,'<p><span style=\";font-family:宋体\">实现循环赛日程表利用的算法是（ &nbsp; &nbsp; &nbsp; &nbsp; ）。</span></p><p><span style=\"font-family:宋体\">（A）分治策略&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; （B）动态规划法 （C）贪心法&nbsp;&nbsp;&nbsp;&nbsp; （D）回溯法</span></p><p><br/></p>',' A',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(140,'<p><span style=\";font-family:宋体\">最长公共子序列算法利用的算法是（ &nbsp;）。 </span></p><p><span style=\";font-family:宋体\">（A）分支界限法&nbsp;&nbsp;&nbsp; （B）动态规划法&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; （C ）贪心法&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; （D）回溯法</span></p><p><br/></p>',' B',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(141,'<p>哪个关键字可以对对象加互斥锁？( )</p><p>&nbsp;A transient &nbsp;B synchronized&nbsp;</p><p>&nbsp;C serialize &nbsp;D static&nbsp;</p>','B',NULL,3,NULL,'2016-07-22',NULL,1,1,2),(142,'<p><span style=\";font-family:宋体\">一个问题可用动态规划算法或贪心算法求解的关键特征是问题的（ &nbsp;）。</span></p><p><span style=\";font-family:宋体\">（A）重叠子问题 （B）最优子结构性质&nbsp; （C）贪心选择性质&nbsp;&nbsp;&nbsp; （D）定义最优解</span></p><p><br/></p>',' B ',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(143,'<p><span style=\";font-family:宋体\">下列算法中不能解决0/1背包问题的是（ &nbsp; &nbsp;）</span></p><p><span style=\";font-family:宋体\">（A）贪心法&nbsp;&nbsp;&nbsp;&nbsp; （B）动态规划&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; （C）回溯法&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; （D）分支限界法</span></p><p><br/></p>','A',NULL,3,NULL,'2016-07-22',NULL,1,1,7),(144,'<p>下列哪些语句关于内存回收的说明是正确的?( )</p><p>&nbsp;A 程序员必须创建一个线程来释放内存</p><p>&nbsp;B 内存回收程序负责释放无用内存 &nbsp;</p><p>&nbsp;C 内存回收程序允许程序员直接释放内存 &nbsp;</p><p>&nbsp;D 内存回收程序可以在指定的时间释放内存对象</p><p><br/></p>','C',NULL,3,NULL,'2016-07-22',NULL,1,1,2),(145,'<p><span style=\"font-size:16px;font-family:宋体\">旅行售货员问题的解空间树是（）。</span></p>','排列树',NULL,3,NULL,'2016-07-22',NULL,1,2,7),(146,'<p style=\"line-height:150%\"><span style=\"font-size:16px;line-height:150%;font-family:宋体\">用回溯法解图的</span><span style=\"font-size:16px;line-height:150%;font-family:&#39;Arial Unicode MS&#39;,&#39;sans-serif&#39;\">m</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">着色问题时，使用下面的函数</span><span style=\"font-size:16px;line-height:150%;font-family:&#39;Arial Unicode MS&#39;,&#39;sans-serif&#39;\">OK</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">检查当前扩展结点的每一个儿子所相应的颜色的可用性，则需耗时（渐进时间上限）（</span><span style=\"font-size:16px;line-height:150%;font-family:宋体\">）。</span></p><p><br/></p>','O（mn）',NULL,3,NULL,'2016-07-22',NULL,1,2,7),(147,'<p>执行下列代码后的结果是_______。</p><p>&nbsp;int x,a=2,b=3,c=4;&nbsp;</p><p>&nbsp;x=++a+b+++c++;</p><p>&nbsp;x=10,a=3,b=4,c=5&nbsp;</p>','123',NULL,3,NULL,'2016-07-22',NULL,1,2,2),(148,'<p>java.util包包含了___________________________。</p>','Collection的接口和类的API',NULL,3,NULL,'2016-07-22',NULL,0,1,2),(149,'<p><span style=\"font-size:12px;font-family:宋体\">题目：古典问题：有一对兔子，从出生后第</span><span style=\"font-size:12px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">3</span><span style=\"font-size:12px;font-family:宋体\">个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？</span><span style=\"font-size:12px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">&nbsp;&nbsp;&nbsp;<br/><br/></span></p><p><br/></p>','//这是一个菲波拉契数列问题\r\npublic class lianxi01 {\r\npublic static void main(String[] args) {\r\nSystem.out.println(\"第1个月的兔子对数:    1\");\r\nSystem.out.println(\"第2个月的兔子对数:    1\");\r\nint f1 = 1, f2 = 1, f, M=24;\r\n     for(int i=3; i<=M; i++) {\r\n      f = f2;\r\n      f2 = f1 + f2;\r\n      f1 = f;\r\n      System.out.println(\"第\" + i +\"个月的兔子对数: \"+f2);\r\n         }\r\n}\r\n}',NULL,3,NULL,'2016-07-22',NULL,1,3,2),(150,'<p><span style=\";font-family:宋体\">题目：判断</span><span style=\";font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">101-200</span><span style=\";font-family:宋体\">之间有多少个素数，并输出所有素数。</span><span style=\";font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">&nbsp;<br/></span></p>','程序分析：判断素数的方法：用一个数分别去除2到sqrt(这个数)，如果能被整除， 则表明此数不是素数，反之是素数。   \r\npublic class lianxi02 {\r\npublic static void main(String[] args) {\r\n    int count = 0;\r\n    for(int i=101; i<200; i+=2) {\r\n     boolean b = false;\r\n     for(int j=2; j<=Math.sqrt(i); j++) \r\n     {\r\n        if(i % j == 0) { b = false; break; } \r\n         else           { b = true; }\r\n     }\r\n        if(b == true) {count ++;System.out.println(i );}\r\n                                  }\r\n    System.out.println( \"素数个数是: \" + count);\r\n}\r\n}\r\n',NULL,3,NULL,'2016-07-22',NULL,1,1,2),(151,'<p>java.util包包含了___________________________。</p>','Collection的接口和类的API',NULL,3,NULL,'2016-07-22',NULL,1,2,2),(152,'<p><span style=\";font-family:宋体\">题目：打印出所有的</span><span style=\";font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\"> &quot;</span><span style=\";font-family:宋体\">水仙花数</span><span style=\";font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\"> &quot;</span><span style=\";font-family:宋体\">，所谓</span><span style=\";font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\"> &quot;</span><span style=\";font-family:宋体\">水仙花数</span><span style=\";font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\"> &quot;</span><span style=\";font-family:宋体\">是指一个三位数，其各位数字立方和等于该数本身。例如：</span><span style=\";font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">153</span><span style=\";font-family:宋体\">是一个</span><span style=\";font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\"> &quot;</span><span style=\";font-family:宋体\">水仙花数</span><span style=\";font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\"> &quot;</span><span style=\";font-family:宋体\">，因为</span><span style=\";font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">153=1</span><span style=\";font-family:宋体\">的三次方＋</span><span style=\";font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">5</span><span style=\";font-family:宋体\">的三次方＋</span><span style=\";font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">3</span><span style=\";font-family:宋体\">的三次方。</span><span style=\";font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\"><br/></span></p>','public class lianxi03 {\r\npublic static void main(String[] args) {\r\n     int b1, b2, b3; \r\n     for(int m=101; m<1000; m++) { \r\n      b3 = m / 100;\r\n      b2 = m % 100 / 10;\r\n      b1 = m %    10;\r\n      if((b3*b3*b3 + b2*b2*b2 + b1*b1*b1) == m) {\r\n      System.out.println(m+\"是一个水仙花数\"); }\r\n     }\r\n}\r\n}   \r\n',NULL,3,NULL,'2016-07-22',NULL,1,3,2),(153,'<p><span style=\"font-size:14px;font-family:宋体\">题目：将一个正整数分解质因数。例如：输入</span><span style=\"font-size:14px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">90,</span><span style=\"font-size:14px;font-family:宋体\">打印出</span><span style=\"font-size:14px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">90=2*3*3*5</span><span style=\"font-size:14px;font-family:宋体\">。</span><span style=\"font-size:14px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">&nbsp;&nbsp;&nbsp;<br/></span><span style=\"font-size:14px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\"><br/> <br/> </span></p>','程序分析：对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：   \r\n(1)如果这个质数恰等于n，则说明分解质因数的过程已经结束，打印出即可。   \r\n(2)如果n <> k，但n能被k整除，则应打印出k的值，并用n除以k的商,作为新的正整数你n,重复执行第一步。   \r\n(3)如果n不能被k整除，则用k+1作为k的值,重复执行第一步。  \r\nimport java.util.*;\r\npublic     class     lianxi04{ \r\n    public static void main(String[] args) {\r\n        Scanner s = new Scanner(System.in);\r\n        System.out.print( \"请键入一个正整数:     \"); \r\n        int    n    = s.nextInt();\r\n        int k=2; \r\n        System.out.print(n + \"=\" );\r\n        while(k <= n) {\r\n          if(k == n) {System.out.println(n);break;}\r\n            else if( n % k == 0) {System.out.print(k + \"*\");n = n / k; } \r\n                    else    k++;\r\n                   }\r\n     }\r\n    } ',NULL,3,NULL,'2016-07-22',NULL,1,3,2),(154,'<p>main方法的声明格式包括________________________________________。</p>','public static void main String args[]',NULL,3,NULL,'2016-07-22',NULL,1,2,2),(155,'<p><span style=\"font-size:14px;font-family:宋体\">题目：利用条件运算符的嵌套来完成此题：学习成绩</span><span style=\"font-size:14px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">&gt; =90</span><span style=\"font-size:14px;font-family:宋体\">分的同学用</span><span style=\"font-size:14px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">A</span><span style=\"font-size:14px;font-family:宋体\">表示，</span><span style=\"font-size:14px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">60-89</span><span style=\"font-size:14px;font-family:宋体\">分之间的用</span><span style=\"font-size:14px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">B</span><span style=\"font-size:14px;font-family:宋体\">表示，</span><span style=\"font-size:14px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">60</span><span style=\"font-size:14px;font-family:宋体\">分以下的用</span><span style=\"font-size:14px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">C</span><span style=\"font-size:14px;font-family:宋体\">表示。</span><span style=\"font-size:14px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">&nbsp;&nbsp;&nbsp;<br/></span><span style=\"font-size: 14px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\"><br/> <br/> </span></p>','import java.util.*;\r\npublic class lianxi05 {\r\npublic static void main(String[] args) {\r\n     int x;\r\n     char grade;\r\n     Scanner s = new Scanner(System.in);\r\n     System.out.print( \"请输入一个成绩: \"); \r\n     x = s.nextInt();  \r\n     grade = x >= 90 ? \'A\'\r\n           : x >= 60 ? \'B\'\r\n           :\'C\';\r\n    System.out.println(\"等级为：\"+grade);\r\n  \r\n}\r\n} ',NULL,3,NULL,'2016-07-22',NULL,1,3,2),(156,'<p><span style=\"font-size:14px;font-family:宋体\">题目：一个数如果恰好等于它的因子之和，这个数就称为</span><span style=\"font-size:14px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\"> &quot;</span><span style=\"font-size:14px;font-family:宋体\">完数</span><span style=\"font-size:14px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\"> &quot;</span><span style=\"font-size:14px;font-family:宋体\">。例如</span><span style=\"font-size:14px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">6=1</span><span style=\"font-size:14px;font-family:宋体\">＋</span><span style=\"font-size:14px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">2</span><span style=\"font-size:14px;font-family:宋体\">＋</span><span style=\"font-size:14px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">3.</span><span style=\"font-size:14px;font-family:宋体\">编程</span><span style=\"font-size:14px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">&nbsp;&nbsp;&nbsp;&nbsp; </span><span style=\"font-size:14px;font-family:宋体\">找出</span><span style=\"font-size:14px;font-family:&#39;ˎ̥&#39;,&#39;serif&#39;\">1000</span><span style=\"font-size:14px;font-family:宋体\">以内的所有完数。</span><span style=\"font-size:14px;font-family: &#39;ˎ̥&#39;,&#39;serif&#39;\">&nbsp;&nbsp;&nbsp;<br/><br/></span></p>','public class lianxi09 {\r\npublic static void main(String[] args) {\r\n     System.out.println(\"1到1000的完数有： \");\r\n     for(int i=1; i<1000; i++) {\r\n      int t = 0;\r\n      for(int j=1; j<= i/2; j++) {\r\n       if(i % j == 0) {\r\n        t = t + j;\r\n       }\r\n      }\r\n      if(t == i) {\r\n       System.out.print(i + \"     \");\r\n      }\r\n     }\r\n}',NULL,3,NULL,'2016-07-22',NULL,1,3,2),(157,'<p class=\"reader-word-layer reader-word-s1-17\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 193px; color: rgb(255, 0, 255); font-family: 宋体, &#39;38978791dd88d0d233d46a870040001&#39;, 宋体; letter-spacing: -0.87px; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 3665px; height: 206px; line-height: 206px; top: 2224px; left: 1280px; z-index: 10; background-color: rgb(255, 255, 255);\">在类作用域中能够通过直接使用该类的（</p><p class=\"reader-word-layer reader-word-s1-14\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 193px; font-family: simsun; color: rgb(255, 0, 255); position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2224px; left: 4946px; z-index: 11; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-14\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 193px; font-family: simsun; color: rgb(255, 0, 255); position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2224px; left: 5040px; z-index: 12; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-14\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 193px; font-family: simsun; color: rgb(255, 0, 255); position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2224px; left: 5135px; z-index: 13; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-15 reader-word-s1-19\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 193px; color: rgb(255, 0, 255); font-family: 宋体, &#39;38978791dd88d0d233d46a870040001&#39;, 宋体; letter-spacing: -0.43px; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 1741px; height: 206px; line-height: 206px; top: 2224px; left: 5230px; z-index: 14; background-color: rgb(255, 255, 255);\">）成员名进行访问。</p><p class=\"reader-word-layer reader-word-s1-14\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 193px; font-family: simsun; color: rgb(255, 0, 255); position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2224px; left: 6969px; z-index: 15; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-20\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: Arial, &#39;38978791dd88d0d233d46a870030001&#39;, Helvetica; letter-spacing: -0.23px; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 236px; height: 206px; line-height: 206px; top: 2599px; left: 1558px; z-index: 16; background-color: rgb(255, 255, 255);\">A.&nbsp;</p><p class=\"reader-word-layer reader-word-s1-21\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: 宋体, &#39;38978791dd88d0d233d46a870040001&#39;, 宋体; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 387px; height: 206px; line-height: 206px; top: 2599px; left: 1836px; z-index: 17; background-color: rgb(255, 255, 255);\">私有</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 2223px; z-index: 18; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 2318px; z-index: 19; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 2415px; z-index: 20; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 2509px; z-index: 21; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 2606px; z-index: 22; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 2703px; z-index: 23; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-20\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: Arial, &#39;38978791dd88d0d233d46a870030001&#39;, Helvetica; letter-spacing: -0.23px; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 236px; height: 206px; line-height: 206px; top: 2599px; left: 2799px; z-index: 24; background-color: rgb(255, 255, 255);\">B.&nbsp;</p><p class=\"reader-word-layer reader-word-s1-21\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: 宋体, &#39;38978791dd88d0d233d46a870040001&#39;, 宋体; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 387px; height: 206px; line-height: 206px; top: 2599px; left: 3076px; z-index: 25; background-color: rgb(255, 255, 255);\">公用</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 3465px; z-index: 26; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 3561px; z-index: 27; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 3658px; z-index: 28; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 3755px; z-index: 29; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 3852px; z-index: 30; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 3946px; z-index: 31; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-22\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: Arial, &#39;38978791dd88d0d233d46a870030001&#39;, Helvetica; letter-spacing: 0.83px; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 249px; height: 206px; line-height: 206px; top: 2599px; left: 4042px; z-index: 32; background-color: rgb(255, 255, 255);\">C.&nbsp;</p><p class=\"reader-word-layer reader-word-s1-21\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: 宋体, &#39;38978791dd88d0d233d46a870040001&#39;, 宋体; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 387px; height: 206px; line-height: 206px; top: 2599px; left: 4333px; z-index: 33; background-color: rgb(255, 255, 255);\">保护</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 4721px; z-index: 34; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 4815px; z-index: 35; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 4912px; z-index: 36; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 5009px; z-index: 37; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 5104px; z-index: 38; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 5200px; z-index: 39; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: Arial, &#39;38978791dd88d0d233d46a870030001&#39;, Helvetica; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 247px; height: 206px; line-height: 206px; top: 2599px; left: 5296px; z-index: 40; background-color: rgb(255, 255, 255);\">D.&nbsp;</p><p class=\"reader-word-layer reader-word-s1-21\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: 宋体, &#39;38978791dd88d0d233d46a870040001&#39;, 宋体; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 387px; height: 206px; line-height: 206px; top: 2599px; left: 5585px; z-index: 41; background-color: rgb(255, 255, 255);\">任何</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 5973px; z-index: 42; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-17\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 193px; color: rgb(255, 0, 255); font-family: 宋体, &#39;38978791dd88d0d233d46a870040001&#39;, 宋体; letter-spacing: -0.87px; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 3665px; height: 206px; line-height: 206px; top: 2224px; left: 1280px; z-index: 10; background-color: rgb(255, 255, 255);\">在类作用域中能够通过直接使用该类的（</p><p class=\"reader-word-layer reader-word-s1-14\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 193px; font-family: simsun; color: rgb(255, 0, 255); position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2224px; left: 4946px; z-index: 11; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-14\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 193px; font-family: simsun; color: rgb(255, 0, 255); position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2224px; left: 5040px; z-index: 12; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-14\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 193px; font-family: simsun; color: rgb(255, 0, 255); position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2224px; left: 5135px; z-index: 13; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-15 reader-word-s1-19\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 193px; color: rgb(255, 0, 255); font-family: 宋体, &#39;38978791dd88d0d233d46a870040001&#39;, 宋体; letter-spacing: -0.43px; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 1741px; height: 206px; line-height: 206px; top: 2224px; left: 5230px; z-index: 14; background-color: rgb(255, 255, 255);\">）成员名进行访问。</p><p class=\"reader-word-layer reader-word-s1-14\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 193px; font-family: simsun; color: rgb(255, 0, 255); position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2224px; left: 6969px; z-index: 15; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-20\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: Arial, &#39;38978791dd88d0d233d46a870030001&#39;, Helvetica; letter-spacing: -0.23px; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 236px; height: 206px; line-height: 206px; top: 2599px; left: 1558px; z-index: 16; background-color: rgb(255, 255, 255);\">A.&nbsp;</p><p class=\"reader-word-layer reader-word-s1-21\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: 宋体, &#39;38978791dd88d0d233d46a870040001&#39;, 宋体; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 387px; height: 206px; line-height: 206px; top: 2599px; left: 1836px; z-index: 17; background-color: rgb(255, 255, 255);\">私有</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 2223px; z-index: 18; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 2318px; z-index: 19; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 2415px; z-index: 20; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 2509px; z-index: 21; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 2606px; z-index: 22; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 2703px; z-index: 23; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-20\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: Arial, &#39;38978791dd88d0d233d46a870030001&#39;, Helvetica; letter-spacing: -0.23px; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 236px; height: 206px; line-height: 206px; top: 2599px; left: 2799px; z-index: 24; background-color: rgb(255, 255, 255);\">B.&nbsp;</p><p class=\"reader-word-layer reader-word-s1-21\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: 宋体, &#39;38978791dd88d0d233d46a870040001&#39;, 宋体; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 387px; height: 206px; line-height: 206px; top: 2599px; left: 3076px; z-index: 25; background-color: rgb(255, 255, 255);\">公用</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 3465px; z-index: 26; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 3561px; z-index: 27; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 3658px; z-index: 28; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 3755px; z-index: 29; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 3852px; z-index: 30; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 3946px; z-index: 31; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-22\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: Arial, &#39;38978791dd88d0d233d46a870030001&#39;, Helvetica; letter-spacing: 0.83px; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 249px; height: 206px; line-height: 206px; top: 2599px; left: 4042px; z-index: 32; background-color: rgb(255, 255, 255);\">C.&nbsp;</p><p class=\"reader-word-layer reader-word-s1-21\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: 宋体, &#39;38978791dd88d0d233d46a870040001&#39;, 宋体; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 387px; height: 206px; line-height: 206px; top: 2599px; left: 4333px; z-index: 33; background-color: rgb(255, 255, 255);\">保护</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 4721px; z-index: 34; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 4815px; z-index: 35; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 4912px; z-index: 36; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 5009px; z-index: 37; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 5104px; z-index: 38; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 5200px; z-index: 39; background-color: rgb(255, 255, 255);\">&nbsp;</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: Arial, &#39;38978791dd88d0d233d46a870030001&#39;, Helvetica; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 247px; height: 206px; line-height: 206px; top: 2599px; left: 5296px; z-index: 40; background-color: rgb(255, 255, 255);\">D.&nbsp;</p><p class=\"reader-word-layer reader-word-s1-21\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: 宋体, &#39;38978791dd88d0d233d46a870040001&#39;, 宋体; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 387px; height: 206px; line-height: 206px; top: 2599px; left: 5585px; z-index: 41; background-color: rgb(255, 255, 255);\">任何</p><p class=\"reader-word-layer reader-word-s1-12\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(50, 50, 50); font-size: 193px; font-family: simsun; position: absolute; word-break: keep-all; -webkit-font-smoothing: antialiased; text-shadow: rgba(0, 0, 0, 0.00392157) 1px 1px 1px; width: 53px; height: 206px; line-height: 206px; top: 2599px; left: 5973px; z-index: 42; background-color: rgb(255, 255, 255);\">&nbsp;</p><p><span style=\"font-family:SimSun\">下列有关基本类的大小不正确的是</span>（）</p><p style=\"text-indent:28px\">A<span style=\"font-family:SimSun\">、</span>int<span style=\"font-family:SimSun\">类型是</span>4<span style=\"font-family:SimSun\">个字节</span></p><p style=\"text-indent:28px\">B<span style=\"font-family:SimSun\">、</span>bool<span style=\"font-family:SimSun\">类型是</span>1<span style=\"font-family:SimSun\">个字节</span></p><p style=\"text-indent:28px\">C<span style=\"font-family:SimSun\">、</span>long<span style=\"font-family:SimSun\">类型是</span>8<span style=\"font-family:SimSun\">个字节</span></p><p style=\"text-indent:28px\">D<span style=\"font-family:SimSun\">、</span>char<span style=\"font-family:SimSun\">类型是一个字节</span></p><p><br/></p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,10),(158,'<p><span style=\"font-family:SimSun\">关于定义数组定义不正确的是</span>（）</p><p style=\"text-indent:28px\">A<span style=\"font-family:SimSun\">、</span>int[] numbers={1<span style=\"font-family:SimSun\">，</span>2<span style=\"font-family:SimSun\">，</span>3<span style=\"font-family:SimSun\">，</span>4<span style=\"font-family:SimSun\">，</span>5<span style=\"font-family:SimSun\">，</span>6};</p><p style=\"text-indent:28px\">B<span style=\"font-family:SimSun\">、</span>int[] numbers=new int[6];</p><p style=\"text-indent:28px\">C<span style=\"font-family:SimSun\">、</span>int[][] numbers=new int[2][3];</p><p style=\"text-indent:28px\">D<span style=\"font-family:SimSun\">、</span>var a=new[]{1,2,3,4,5,6};</p><p><br/></p>','C',NULL,3,NULL,'2016-07-22',NULL,1,1,3),(159,'<p>javascript中，用于显示弹出提示框的方法是（ ）。</p><p>A. alert() &nbsp;B. confirm()</p><p>C. prompt()&nbsp;D. createPopup()</p>','A',NULL,3,NULL,'2016-07-22',NULL,1,1,2),(160,'<p>代码：delegate void Del(int x);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; void DoWork(int k);</p><p><span style=\"text-indent: 28px; font-family: SimSun;\">下列关于委托订阅不正确的是</span><span style=\"text-indent: 28px;\">（）</span></p><p style=\"text-indent:28px\">A<span style=\"font-family:SimSun\">、</span>Del d=DoWork;</p><p style=\"text-indent:28px\">B<span style=\"font-family:SimSun\">、</span>Del d=new Del(DoWork);</p><p style=\"text-indent:28px\">C<span style=\"font-family:SimSun\">、</span>Del d+=DoWork</p><p style=\"text-indent:28px\">D<span style=\"font-family:SimSun\">、</span>Del d=delegate(int x){DoWork(x);};</p><p><br/></p>','C',NULL,3,NULL,'2016-07-22',NULL,1,1,3),(161,'<p><span style=\"font-family:SimSun\">有关</span>absract<span style=\"font-family:SimSun\">关键字说法不正确的是</span>（）</p><p style=\"text-indent:28px\">A<span style=\"font-family:SimSun\">、</span>absract<span style=\"font-family:SimSun\">用于创建仅用于继承用途的类和类的成员</span></p><p style=\"text-indent:28px\">B<span style=\"font-family:SimSun\">、</span>absract<span style=\"font-family:SimSun\">用于方法，则该方法隐含是虚函数</span></p><p style=\"text-indent:28px\">C<span style=\"font-family:SimSun\">、</span>absract<span style=\"font-family:SimSun\">用于类，则此类无法被实例化</span></p><p style=\"text-indent:28px\">D<span style=\"font-family:SimSun\">、</span>absract<span style=\"font-family:SimSun\">用于方法，则该方法有方法体</span></p><p><br/></p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,3),(162,'<p>使用JSP开发Web项目时，web.xml文件一般位于目录结构中的（ ）下。</p><p>A. src目录</p><p>B. 文档根目录或其子文件夹</p><p>C. META-INF目录</p><p>D. WEB-INF目录</p><p><br/></p>','D',NULL,3,NULL,'2016-07-22',NULL,0,1,1),(163,'<p><span style=\"font-family:SimSun\">在</span>C#<span style=\"font-family:SimSun\">中，下列常量定义正确的是（</span><span style=\"font-family:SimSun\">）</span></p><p style=\"text-indent:28px\">A<span style=\"font-family:SimSun\">、</span>Const double PI 3.1415926;</p><p style=\"text-indent:28px\">B<span style=\"font-family:SimSun\">、</span>Const double e=2.7</p><p style=\"text-indent:28px\">C<span style=\"font-family:SimSun\">、</span>define double PI 3.1415926</p><p style=\"text-indent:28px\">D<span style=\"font-family:SimSun\">、</span>define double e=2.7</p><p><br/></p>','B',NULL,3,NULL,'2016-07-22',NULL,1,1,3),(164,'<p><span style=\"font-family:SimSun\">以下</span>c#<span style=\"font-family:SimSun\">代码：</span></p><p style=\"text-indent:28px\">using System.Threading;</p><p style=\"text-indent:28px\">class App{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void Main(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;Timer timer = new Timer(new TimerCallback(CheckStatus),null,0,2000);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;Console.Read();</p><p style=\"margin-left:28px;text-indent:28px\">}</p><p style=\"margin-left:28px;text-indent:28px\">static void CheckSatus(Object state){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;<span style=\"font-family:SimSun\">正在进行检查</span>...&quot;)</p><p>&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>}</p><p><span style=\"text-indent: 28px; font-family: SimSun;\">在使用代码创建定时器对象的时候，同时指定了定时器的事件，运行时将每隔两秒打印一行</span><span style=\"text-indent: 28px;\">“</span><span style=\"text-indent: 28px; font-family: SimSun;\">正在运行检查</span><span style=\"text-indent: 28px;\">...”</span><span style=\"text-indent: 28px; font-family: SimSun;\">，因此，</span><span style=\"text-indent: 28px;\">TimerCallback</span><span style=\"text-indent: 28px; font-family: SimSun;\">是一个（</span><span style=\"text-indent: 28px; font-family: SimSun;\">）</span></p><p style=\"text-indent:28px\">A.<span style=\"font-family:SimSun\">委托</span></p><p style=\"text-indent:28px\">B.<span style=\"font-family:SimSun\">结构</span></p><p style=\"text-indent:28px\">C.<span style=\"font-family:SimSun\">函数</span></p><p style=\"text-indent:28px\">D.<span style=\"font-family:SimSun\">类名</span></p><p><br/></p>','A',NULL,3,NULL,'2016-07-22',NULL,1,1,3),(165,'<p>一道还不错的Java填空题____________________________。</p>','填空题答案xxx',NULL,3,NULL,'2016-07-22',NULL,1,2,2),(166,'<p><span style=\"font-family:SimSun\">在</span>.NET<span style=\"font-family:SimSun\">中，从属性的读写特性上来进行分类，可以划分为以下三种，除了（</span><span style=\"font-family:SimSun\">）。</span></p><p style=\"text-indent:28px\">A.<span style=\"font-family:SimSun\">只读属性&nbsp;</span>B.<span style=\"font-family: SimSun;\">只写属性&nbsp;</span>C.<span style=\"font-family: SimSun;\">读写属性&nbsp;</span>&nbsp; D.<span style=\"font-family: SimSun;\">不可读不可写的属性</span></p><p><br/></p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,3),(167,'<p>java填空____________________。<br/></p>','java答案',NULL,3,NULL,'2016-07-22',NULL,1,1,2),(168,'<p>&nbsp;<span style=\"font-family:SimSun\">阅读以下的</span>C#<span style=\"font-family:SimSun\">代码：</span></p><p style=\"text-indent:28px\">public class TEApp{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void ThrowException(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new Exception();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void Main(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;try&quot;);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ThrowException();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch(Exception e){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;catch&quot;);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; finally{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;finally&quot;);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p style=\"margin-left:28px\">}</p><p><span style=\"font-family:SimSun\">请问代码运行结果是（</span><span style=\"font-family:SimSun\">）。</span></p><p style=\"text-indent:28px\">A.try&nbsp;&nbsp;&nbsp;&nbsp; catch&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; finally</p><p style=\"text-indent:28px\">B.try</p><p style=\"text-indent:28px\">C.try&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch</p><p style=\"text-indent:28px\">D.try&nbsp;&nbsp;&nbsp;&nbsp; finally</p><p><br/></p>','A',NULL,4,NULL,'2016-07-22',NULL,1,1,3),(169,'<p><span style=\"font-family:SimSun\">在</span>C#<span style=\"font-family:SimSun\">中，一个类（</span><span style=\"font-family:SimSun\">）</span>.</p><p style=\"text-indent:28px\">A.<span style=\"font-family:SimSun\">可以继承多个类</span></p><p style=\"text-indent:28px\">B.<span style=\"font-family:SimSun\">可以实现多个接口</span></p><p style=\"text-indent:28px\">C.<span style=\"font-family:SimSun\">在一个程序中只能有一个子类</span></p><p style=\"text-indent:28px\">D.<span style=\"font-family:SimSun\">只能实现一个接口</span></p><p><br/></p>','B',NULL,2,NULL,'2016-07-22',NULL,1,1,3),(170,'<p><span style=\"font-size:14px;font-family:SimSun\">用于获取值类型的大小的关键字</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">________</span><span style=\"font-size:14px;font-family:SimSun\">，用于在栈中分配内存空间的关键字</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">______</span><span style=\"font-size:14px;font-family:SimSun\">。</span></p>','sizeof、stackalloc',NULL,3,NULL,'2016-07-22',NULL,1,2,1),(171,'<p><span style=\"font-size:14px;font-family:SimSun\">用于获取值类型的大小的关键字</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">________</span><span style=\"font-size:14px;font-family:SimSun\">，用于在栈中分配内存空间的关键字</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">______</span><span style=\"font-size:14px;font-family:SimSun\">。</span></p>','sizeof、stackalloc',NULL,3,NULL,'2016-07-22',NULL,1,2,3),(172,'<p style=\"white-space: normal;\">使用JSP开发Web项目时，web.xml文件一般位于目录结构中的（ ）下。</p><p style=\"white-space: normal;\">A. src目录</p><p style=\"white-space: normal;\">B. 文档根目录或其子文件夹</p><p style=\"white-space: normal;\">C. META-INF目录</p><p style=\"white-space: normal;\">D. WEB-INF目录</p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,2),(173,'<p><span style=\"font-size:14px;font-family:SimSun\">用于声明委托的关键字</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">________</span><span style=\"font-size:14px;font-family:SimSun\">，用来声明事件的关键字</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">_______,</span><span style=\"font-size:14px;font-family:SimSun\">用于声明局部匿名类型的关键字</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">_______</span><span style=\"font-size:14px;font-family:SimSun\">，用于声明在外部实现的方法的关键字</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">________</span><span style=\"font-size:14px;font-family:SimSun\">。</span></p>','delegate、event、var、extern',NULL,3,NULL,'2016-07-22',NULL,1,2,3),(174,'<p><span style=\"font-family:SimSun\">值类型转换为引用类型称为</span>________<span style=\"font-family:SimSun\">，应用类型转换为值类型称为</span>_________</p><p><br/></p>','装箱、拆箱',NULL,2,NULL,'2016-07-22',NULL,1,2,3),(175,'<p><span style=\"font-family:SimSun\">面向对象的三大特性</span>________ ________ ___________</p>','继承、封装、多态',NULL,2,NULL,'2016-07-22',NULL,1,2,3),(176,'<p><span style=\"font-size:14px;font-family:SimSun\">异常的基类</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">__________,C#</span><span style=\"font-size:14px;font-family:SimSun\">中所有类型都继承</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">________</span></p>','Exception，Object',NULL,3,NULL,'2016-07-22',NULL,1,2,3),(177,'<p>下面程序的输出是（ ）&nbsp;</p><p>#include&lt;stdio.h&gt; void main() { int k=11; &nbsp; printf(&quot;k=%d,k=%o,k=%x\\n&quot;,k,k,k); }&nbsp;</p><p>&nbsp;A &nbsp;k=11,k=12,k=11 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p><p>&nbsp;B &nbsp;k=11,k=13,k=13&nbsp;</p><p>&nbsp;C &nbsp;k=11,k=013,k=0xb &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p><p>&nbsp;D &nbsp;k=11,k=13,k=b&nbsp;</p><p><br/></p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,4),(178,'<p>在下列选项中,不正确的赋值语句是（ ）&nbsp;</p><p>&nbsp;A) ++t; &nbsp; &nbsp; &nbsp;&nbsp;</p><p>&nbsp;B) n1=(n2=(n3=0)); &nbsp; &nbsp; &nbsp;</p><p>&nbsp;C) k=i=j; &nbsp; &nbsp;</p><p>&nbsp;D) a=b+c=1;</p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,4),(179,'<p>下面合法的C语言字符常量是（ ）&nbsp;</p><p>&nbsp;A) &#39;\\t&#39; &nbsp; &nbsp; &nbsp; &nbsp;B) &quot;A&quot; &nbsp; &nbsp;</p><p>&nbsp;C) 65 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;D) A</p>','A',NULL,3,NULL,'2016-07-22',NULL,1,1,4),(180,'<p>表达式: 10!=9的值是（ ）&nbsp;</p><p>A) true &nbsp; &nbsp; &nbsp; &nbsp;B) 非零值 &nbsp;</p><p>C) 0 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; D) 1</p><p><br/></p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,1),(181,'<p>C语言提供的合法的数据类型关键字是（ ）</p><p>&nbsp;A) Double &nbsp; &nbsp; &nbsp;B) short &nbsp; &nbsp;</p><p>&nbsp;C) integer &nbsp; &nbsp; &nbsp;D) Char</p><p><br/></p>','B',NULL,3,NULL,'2016-07-22',NULL,1,1,4),(182,'<p>字符(char)型数据在微机内存中的存储形式是（ ）</p><p>&nbsp;A) 反码 &nbsp; &nbsp; &nbsp;B) 补码&nbsp;</p><p>&nbsp;C) EBCDIC码 &nbsp; D) ASCII码&nbsp;</p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,4),(183,'<p>C语言程序的基本单位是（ ）</p><p>&nbsp;A) 程序行 &nbsp; &nbsp; &nbsp;B) 语句 &nbsp;</p><p>&nbsp;C) 函数 &nbsp; &nbsp; &nbsp; &nbsp; D) 字符</p>','C',NULL,3,NULL,'2016-07-22',NULL,1,1,4),(184,'<p>设 int a=12,则执行完语句a+=a-=a*a后,a的值是（ ）</p><p>&nbsp;A) 552 &nbsp; &nbsp; &nbsp; &nbsp;B) 264 &nbsp; &nbsp;</p><p>&nbsp;C) 144 &nbsp; &nbsp; &nbsp; &nbsp;D) -264&nbsp;</p><p><br/></p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,4),(185,'<p>执行下面程序中的输出语句后,输出结果是（）</p><p>&nbsp;#include&lt;stdio.h&gt;&nbsp;</p><p>&nbsp;void main() {</p><p>&nbsp; &nbsp; &nbsp; int a;</p><p>&nbsp; &nbsp; &nbsp; printf(&quot;%d\\n&quot;,(a=3*5,a*4,a+5));</p><p>&nbsp;}&nbsp;</p><p>&nbsp;A) 65 &nbsp; &nbsp; &nbsp; &nbsp;B) 20 &nbsp; &nbsp; &nbsp; &nbsp;C) 15 &nbsp; &nbsp; &nbsp; &nbsp; D) 10</p><p><br/></p>','B',NULL,3,NULL,'2016-07-22',NULL,1,1,4),(186,'<p>下面程序的输出是（ ）</p><p>&nbsp;#include&lt;stdio.h&gt;&nbsp;</p><p>&nbsp;void main(){</p><p>&nbsp; &nbsp; int x=023;&nbsp;</p><p>&nbsp; &nbsp; printf(&quot;%d\\n&quot;,--x);</p><p>&nbsp;}&nbsp;</p><p>&nbsp;A) 17 &nbsp; &nbsp; &nbsp; &nbsp;B) 18 &nbsp; &nbsp; &nbsp; &nbsp;C) 23 &nbsp; &nbsp; &nbsp; D) 24</p><p><br/></p>','B',NULL,3,NULL,'2016-07-22',NULL,1,1,4),(187,'<p>下面程序的输出的是（ ）</p><p>&nbsp;#include&lt;stdio.h&gt;</p><p>&nbsp; void main() {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; int x=10,y=3;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;%d\\n&quot;,y=x/y);&nbsp;</p><p>&nbsp; }&nbsp;</p><p>&nbsp; A) 0 &nbsp; &nbsp; &nbsp; &nbsp;B) 1 &nbsp; &nbsp; &nbsp; C) 3 &nbsp; &nbsp; &nbsp;D) 不确定的值</p><p><br/></p>','C',NULL,3,NULL,'2016-07-22',NULL,1,1,4),(188,'<p><span style=\"font-size:14px;font-family:SimSun\">简述</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">private</span><span style=\"font-size:14px;font-family:SimSun\">、</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">protected</span><span style=\"font-size:14px;font-family:SimSun\">、</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">public</span><span style=\"font-size:14px;font-family:SimSun\">、</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">internal</span><span style=\"font-size:14px;font-family:SimSun\">修饰符的作用</span></p>','private只有在声明他们的类和结构体中才可访问\r\nProtected在它的类中或派生类中访问\r\nPublic对访问成员没有限制\r\nInternal对同一程序集的文件中，内部类型或成员才是可访问的\r\n',NULL,2,NULL,'2016-07-22',NULL,1,3,3),(189,'<p><span style=\"font-size:14px;font-family:SimSun\">简述一下</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">static</span><span style=\"font-size:14px;font-family:SimSun\">修饰符的有关功能</span></p>','接口是一种契约，是不可实例化的，并且可以继承多个接口，类可以继承多个接口，接口中不可有方法体，并且不能指定修饰符。\r\n	类是可以继承多个接口，类只能单继承类。抽象类是类的一种特殊形式\r\n	抽象类中可以有方法的实现，也可以指定方法的访问修饰符。但不能实例化\r\n',NULL,3,NULL,'2016-07-22',NULL,1,3,3),(190,'<p>已知字母A的ASCII码为十进制的65,下面程序的输出是（ ）</p><p>&nbsp;#include&lt;stdio.h&gt;</p><p>&nbsp; void main() {&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp;char ch1,ch2; &nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp;ch1=&#39;A&#39;+&#39;5&#39;-&#39;3&#39;;</p><p>&nbsp; &nbsp; &nbsp; &nbsp;ch2=&#39;A&#39;+&#39;6&#39;-&#39;3&#39;;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp;printf(&quot;%d,%c\\n&quot;,ch1,ch2);</p><p>&nbsp; }&nbsp;</p><p>&nbsp;A) 67,D &nbsp; &nbsp; &nbsp;B) B,C &nbsp; &nbsp; C) C,D &nbsp; D) 不确定的值</p><p><br/></p>','A',NULL,3,NULL,'2016-07-22',NULL,1,1,4),(191,'<p>若要求在if后一对圆括号中表示a不等于0的关系,则能正确表示这一关系的表达式为（ ）&nbsp;</p><p>&nbsp;A) a&lt;&gt;0 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;B) !a &nbsp; &nbsp; &nbsp; C) a=0 &nbsp; &nbsp; &nbsp; &nbsp;D) a</p><p><br/></p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,4),(192,'<p><span style=\"font-size:14px;font-family:SimSun\"></span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">C#</span><span style=\"font-size:14px;font-family:SimSun\">是否可以对内存直接进行操作</span><span style=\"font-size: 14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">?</span><span style=\"font-size:14px;font-family:SimSun\"></span></p>','C#是可以对内存进行直接操作的，虽然很少用到指针，但是C#是可以使用指针 的，在用的时候需要在前边加unsafe,，在.net中使用了垃圾回收机制(GC)功能，它替代了程序员，不过在C#中不可以直接使用finalize 方法，而是在析构函数中调用基类的finalize()方法\r\n90、sealed表示不可继承的\r\n',NULL,4,NULL,'2016-07-22',NULL,1,3,3),(193,'<p><span style=\"font-size:14px;font-family:SimSun\">使用</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">sealed</span><span style=\"font-size:14px;font-family:SimSun\">、</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">virtual</span><span style=\"font-size:14px;font-family:SimSun\">、</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">override</span><span style=\"font-size:14px;font-family:SimSun\">、</span><span style=\"font-size:14px;font-family:&#39;Times New Roman&#39;,&#39;serif&#39;\">abstract</span><span style=\"font-size:14px;font-family:SimSun\">修饰的类有什么特点？</span></p>','sealed表示不可继承的\r\nvirtual表示虚方法，可被覆盖\r\noverride，覆盖基类方法\r\nabstract表示抽象方法，该类不可实例化\r\n',NULL,2,NULL,'2016-07-22',NULL,1,3,3),(194,'<p>设有说明:char w; int x; float y; double z; 则表达式: w*x+z-y值的数据类型是_______.&nbsp; &nbsp;&nbsp;</p>','double ',NULL,3,NULL,'2016-07-22',NULL,1,2,4),(195,'<p><span style=\"font-size:14px;font-family:SimSun\">值类型和引用类型的区别，结构体与类的区别</span></p>','值类型的值是存放在堆栈中的，改变其值，不改变变量原有的值，而引用类型的值是存放在栈中的，其引用的地址是存放在堆栈中的，改变其值也就改变了变量原有的值。值类型不允许包含null值，然而可空类型可以将null赋值给值类型l。',NULL,3,NULL,'2016-07-22',NULL,1,3,3),(196,'<p>CLR<span style=\"font-family:SimSun\">为</span>.NET<span style=\"font-family:SimSun\">提供以下方面的功能或者服务．除了（</span><span style=\"font-family:SimSun\">）。</span></p><p style=\"text-indent:28px\">B.<span style=\"font-family:SimSun\">代码验证和类型安全</span></p><p style=\"text-indent:28px\">C.<span style=\"font-family:SimSun\">代码访问安全</span></p><p style=\"text-indent:28px\">D.<span style=\"font-family:SimSun\">自动消除程序中的逻辑错误</span></p><p><br/></p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,3),(197,'<p>C语言填空题____________________.<br/></p>','C答案',NULL,3,NULL,'2016-07-22',NULL,1,1,4),(198,'<p><span style=\"font-family:SimSun\">有关</span>fixed<span style=\"font-family:SimSun\">关键字说法不正确的是()</span></p><p style=\"text-indent:28px\">A<span style=\"font-family:SimSun\">、</span>fixed<span style=\"font-family:SimSun\">语句禁止垃圾回收器重定位可移动的变量</span></p><p style=\"text-indent:28px\">B<span style=\"font-family:SimSun\">、</span>fixed<span style=\"font-family:SimSun\">语句只能出现在不安全上下文中</span></p><p style=\"text-indent:28px\">C<span style=\"font-family:SimSun\">、</span>fixed<span style=\"font-family:SimSun\">语句可以在数据结构或类中创建带有固定大小数组的缓冲区</span></p><p style=\"text-indent:28px\">D<span style=\"font-family:SimSun\">、</span>fixed<span style=\"font-family:SimSun\">语句用于创建固定数组时，数组类型只能是</span>bool<span style=\"font-family:SimSun\">、</span>byte<span style=\"font-family:SimSun\">、</span>char<span style=\"font-family:SimSun\">、</span>short<span style=\"font-family:SimSun\">、</span>int<span style=\"font-family:SimSun\">、</span>long<span style=\"font-family:SimSun\">、</span>sbyte<span style=\"font-family:SimSun\">、</span>ushort<span style=\"font-family:SimSun\">、</span>uint<span style=\"font-family:SimSun\">、</span>ulong<span style=\"font-family:SimSun\">、</span>float<span style=\"font-family:SimSun\">、</span>double<span style=\"font-family:SimSun\">中的一种。</span></p><p><br/></p>','C',NULL,3,NULL,'2016-07-22',NULL,1,1,3),(199,'<p><span style=\"font-family:SimSun\">有关属性（</span>System.Attribute<span style=\"font-family:SimSun\">）是用于</span>P/Invoke<span style=\"font-family:SimSun\">的属性类型是()</span></p><p style=\"text-indent:28px\">A<span style=\"font-family:SimSun\">、</span>CoditionalAttribute</p><p style=\"text-indent:28px\">B<span style=\"font-family:SimSun\">、</span>ObsoleteAttribute</p><p style=\"text-indent:28px\">C<span style=\"font-family:SimSun\">、</span>DllImportAttribute</p><p style=\"text-indent:28px\">D<span style=\"font-family:SimSun\">、</span>AttributeUsageAttribute</p><p><br/></p>','C',NULL,3,NULL,'2016-07-22',NULL,1,1,3),(200,'<p>在C语言中，表示静态存储类别的关键字是: ______________.</p>','static ',NULL,3,NULL,'2016-07-22',NULL,1,2,4),(201,'<p><span style=\"font-family:SimSun\">有关异步委托</span>Control.BeginInvoke<span style=\"font-family:SimSun\">（界面）和</span>myDelegate.BeginInvoek<span style=\"font-family: SimSun\">实现方式说法正确的()</span></p><p style=\"text-indent:28px\">A<span style=\"font-family:SimSun\">、</span>Conrol.BeginInvoek<span style=\"font-family:SimSun\">和</span>MyDelegate.BeginInvoek<span style=\"font-family:SimSun\">都是使用</span>PostMessage<span style=\"font-family:SimSun\">发送消息。</span></p><p style=\"text-indent:28px\">B<span style=\"font-family:SimSun\">、</span>Conrol.BeginInvoek<span style=\"font-family:SimSun\">是使用</span>PostMessage<span style=\"font-family:SimSun\">发送消息，</span>MyDelegate.BeginInvoek<span style=\"font-family:SimSun\">是使用线程池的</span></p><p style=\"text-indent:28px\">C<span style=\"font-family:SimSun\">、</span>Conrol.BeginInvoek<span style=\"font-family:SimSun\">和</span>MyDelegate.BeginInvoek<span style=\"font-family:SimSun\">都是使用线程池的</span></p><p style=\"text-indent:28px\">D<span style=\"font-family:SimSun\">、</span>Conrol.BeginInvoek<span style=\"font-family:SimSun\">是使用线程池的，</span>MyDelegate.BeginInvoek<span style=\"font-family:SimSun\">是使用</span>PostMessage<span style=\"font-family:SimSun\">发送消息</span></p><p><br/></p>','B',NULL,4,NULL,'2016-07-22',NULL,1,1,3),(202,'<p>&amp; <span style=\"font-family:SimSun\">和</span>&amp;&amp;<span style=\"font-family:SimSun\">的区别是</span>()</p><p>A<span style=\"font-family: SimSun\">、</span>&amp;<span style=\"font-family:SimSun\">是算术</span>”<span style=\"font-family:SimSun\">与</span>”<span style=\"font-family:SimSun\">运算符，用于整形和</span>bool<span style=\"font-family:SimSun\">；</span>&amp;&amp;<span style=\"font-family:SimSun\">是条件</span>”<span style=\"font-family:SimSun\">与</span>”<span style=\"font-family:SimSun\">运算符，仅用于</span>bool</p><p>B<span style=\"font-family: SimSun\">、</span>&amp;<span style=\"font-family:SimSun\">和</span>&amp;&amp;<span style=\"font-family:SimSun\">是算术</span>”<span style=\"font-family:SimSun\">与</span>”<span style=\"font-family:SimSun\">运算符，用于整形和</span>bool</p><p>C<span style=\"font-family: SimSun\">、</span>&amp;&amp;<span style=\"font-family:SimSun\">是算术</span>”<span style=\"font-family:SimSun\">与</span>”<span style=\"font-family:SimSun\">运算符，用于整形和</span>bool<span style=\"font-family:SimSun\">；</span>&amp;<span style=\"font-family:SimSun\">是条件</span>”<span style=\"font-family:SimSun\">与</span>”<span style=\"font-family:SimSun\">运算符，仅用于</span>bool</p><p>D<span style=\"font-family: SimSun\">、</span>&amp;<span style=\"font-family:SimSun\">和</span>&amp;&amp;<span style=\"font-family:SimSun\">是条件</span>”<span style=\"font-family:SimSun\">与</span>”<span style=\"font-family:SimSun\">运算符，仅用于</span>bool</p><p><br/></p>','A',NULL,3,NULL,'2016-07-22',NULL,1,1,3),(203,'<p>C语言问答题?</p>','C语言问答题答案',NULL,3,NULL,'2016-07-22',NULL,1,3,4),(204,'<p>＃include&lt; &gt;和＃include&quot; &quot;有什么区别？</p>','＃include\" \"用来包含.c/.cpp文件所在目录下的头文件。注意：有些开发环境可以在当前目录下面自动收索（包含子目录），有些开发环境需要指定明确的文件路径名',NULL,3,NULL,'2016-07-22',NULL,1,3,4),(205,'<p>switch(c) 语句中 c 可以是 int, long, char, float, unsigned int 类型？</p>','其实这个题目很基础，c应该是整型或者可以隐式转换为整型的数据，很明显不能是实型(float、double)。所以这个命题是错误的。',NULL,3,NULL,'2016-07-22',NULL,1,3,4),(206,'<p>const有什么用途？</p>','虽然const很常用，但是我相信有很多人仍然答不上来。',NULL,3,NULL,'2016-07-22',NULL,1,1,4),(207,'<p>头文件中的 #ifndef/#define/#endif 干什么用？</p>','其实#ifndef、#define、#endif这些在u-boot、linux内核文件中经常见到，在这么大型的程序中大量使用，可见它的作用不可小觑。',NULL,3,NULL,'2016-07-22',NULL,1,3,4),(208,'<p>（ ）是位于用户和操作系统之间的一层数据管理软件。数据库在建立、使用和维护时由其统一管理、统一控制。&nbsp;</p><p>&nbsp; A． DB &nbsp; &nbsp; &nbsp;B．DBMS &nbsp; &nbsp; &nbsp; &nbsp; C．DBS &nbsp; &nbsp; &nbsp; &nbsp;D．DBA&nbsp;</p><p><br/></p>','B',NULL,3,NULL,'2016-07-22',NULL,1,1,5),(209,'<p>SQL语言允许使用通配符进行字符串匹配的操作，其中‘%’可以表示（ ）&nbsp;</p><p>&nbsp;A、零个字符 &nbsp; &nbsp;B、1个字符 &nbsp; &nbsp;C、多个字符 &nbsp; &nbsp;D、以上都可以&nbsp;</p><p><br/></p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,5),(210,'<p>下列哪一个数据库不是SQL Server 2000的系统数据库（ ）&nbsp;</p><p>&nbsp;A．master数据库 &nbsp; &nbsp; &nbsp; &nbsp; B．msdb数据库 &nbsp;</p><p>&nbsp;C．pubs数据库 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; D．model数据库</p><p><br/></p>','C',NULL,3,NULL,'2016-07-22',NULL,1,1,5),(211,'<p>下列四项中，可以直接用于表示概念模型的是( )。</p><p>&nbsp;A. 网状模型 &nbsp; &nbsp;B.关系模型 &nbsp; &nbsp;C.层次模型 &nbsp; &nbsp;D.实体-联系(E-R)模型</p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,5),(212,'<p>下列四项中说法不正确的是( &nbsp;) &nbsp;</p><p>&nbsp;A. 数据库避免了一切数据的重复 &nbsp;&nbsp;</p><p>&nbsp;B.数据库中的数据可以共享</p><p>&nbsp;C. 数据库减少了数据冗余</p><p>&nbsp;D.数据库具有较高的数据独立性&nbsp;</p><p><br/></p>','A',NULL,3,NULL,'2016-07-22',NULL,1,1,5),(213,'<p>公司中有多个部门和多名职员，每个职员只能属于一个部门，一个部门可以有多名职员，从职员到部门的联系类型是( )&nbsp;</p><p>&nbsp;A.多对多 &nbsp; &nbsp; &nbsp; B.一对一 &nbsp; &nbsp; &nbsp; C.多对一 &nbsp; &nbsp; D.一对多</p><p><br/></p>','C',NULL,3,NULL,'2016-07-22',NULL,1,1,5),(214,'<p>关系数据库中空值（NULL）相当于( )&nbsp;</p><p>&nbsp;A. 零（0） &nbsp; B. 空白 &nbsp; &nbsp;C. 零长度的字符串 &nbsp; &nbsp;D. 没有输入&nbsp;</p><p><br/></p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,5),(215,'<p>事务有多个性质，其中不包括( )&nbsp;</p><p>&nbsp;A.隔离性 &nbsp; &nbsp; &nbsp; B. 不可撤消 &nbsp; &nbsp; &nbsp;C.原子性 &nbsp; &nbsp; &nbsp;D. 一致性</p><p><br/></p>','B',NULL,3,NULL,'2016-07-22',NULL,1,1,5),(216,'<p>一个电视经销商在表Tvtype 中维护库存的Tvs信息,下述哪条语句能显示价格最昂贵的三种电视机的信息?( )&nbsp;</p><p>A. select top3 cDiscription from Tvtype order by iprice asc&nbsp;</p><p>B. select cDiscription from Tvtype where max(iprice)&gt;3&nbsp;</p><p>C. select top3 cDiscription from Tvtype order by iprice desc&nbsp;</p><p>D. select cDiscription max(iprice) from Tvtype order by iprice</p><p><br/></p>','C',NULL,3,NULL,'2016-07-22',NULL,1,1,5),(217,'<p>假如采用关系数据库系统来实现应用，在数据库设计的( )阶段，需要将E-R模型转换为关系数据模型。&nbsp;</p><p>&nbsp;A.概念设计 &nbsp; &nbsp; B.物理设计 &nbsp; &nbsp;C. 运行阶段 &nbsp; &nbsp; D. 逻辑设计</p><p><br/></p>','D',NULL,3,NULL,'2016-07-22',NULL,1,1,5),(218,'<p>取出关系中的某些列，并消去重复的元组的关系运算称为( )&nbsp;</p><p>&nbsp;A.取列运算 &nbsp; &nbsp; B. 投影运算 &nbsp; &nbsp; C.连接运算 &nbsp; &nbsp;D. 选择运算</p>','B',NULL,3,NULL,'2016-07-22',NULL,1,1,5),(219,'<p>数据库系统中常用的三种数据模型有______、______ 和 ______。&nbsp;</p>','层次模型、网状模型 和 关系模型',NULL,3,NULL,'2016-07-22',NULL,1,2,5),(220,'<p>SQL语言由数据定义语言、 __________ 和 __________ 组成。</p>','数据操纵语言 和 数据控制语言',NULL,3,NULL,'2016-07-22',NULL,1,2,5),(221,'<p>使用____________命令可以增加数据库和事务日志的容量。</p>','filegrowth',NULL,3,NULL,'2016-07-22',NULL,1,2,5),(222,'<p>在ProOut表上设置外键，保证录入时的产品代码都在产品表中存在的。&nbsp;</p><p><br/></p><p><br/></p>','      USE Sales \r\n      GO \r\n​      ALTER TABLE ProOut \r\n      ADD CONSTRAINT FK_ ProOut_ProNo FOREIGN KEY \r\n (ProNo) \r\n      REFERENCES Product(ProNo) \r\n      GO',NULL,3,NULL,'2016-07-22',NULL,1,3,5),(223,'<p>创建一规则限定只能录入大于０的值，然后将其绑定到ProOut表上Quantity列。</p><p><br/></p>','CREATE RULE RU_ProOut as @x>0 \r\nEXEC sp_bindrule RU_ProOut, \'ProOut. Quantity’',NULL,3,NULL,'2016-07-22',NULL,1,3,5),(224,'<p>什么是X封锁？ &nbsp;</p><p><br/></p><p><br/></p>','如果事务T对数据R实现X封锁，那么其他的事务要等T解除X封锁以后，才能对这个数据进行封锁。 只有获准X封锁的事务，才能对被封锁的数据进行修改。',NULL,3,NULL,'2016-07-22',NULL,1,3,5),(225,'<p>sdsfd<br/></p><p><img src=\"http://localhost:8080/images/20160722/1469174294232013525.jpg\" title=\"1469174294232013525.jpg\" alt=\"Hydrangeas.jpg\" width=\"561\" height=\"250\"/></p>','hua ',NULL,3,NULL,'2016-07-22',NULL,0,2,1),(226,'<p>嗷嗷啊<br/></p>','是',NULL,3,NULL,'2016-08-16',NULL,1,1,1),(227,'<p>OK<img src=\"http://localhost:8080/images/20160816/1471326202153038854.jpg\" title=\"1471326202153038854.jpg\" alt=\"Chrysanthemum.jpg\" width=\"149\" height=\"106\"/></p>','OK',NULL,3,NULL,'2016-08-16',NULL,0,2,1),(228,'<p><img src=\"http://localhost:8080/images/20160817/1471399461958080774.jpg\" title=\"1471399461958080774.jpg\" alt=\"Tulips.jpg\"/></p>','ok',NULL,3,NULL,'2016-08-17',NULL,0,2,1),(229,'<p><img src=\"http://localhost:8080/images/20160817/1471399851693099946.jpg\" title=\"1471399851693099946.jpg\" alt=\"Penguins.jpg\" width=\"408\" height=\"241\"/></p>','qie',NULL,3,NULL,'2016-08-17',NULL,0,2,1),(230,'<p><img src=\"http://localhost:8087/images/20160817/1471401204065089409.jpg\" title=\"1471401204065089409.jpg\" alt=\"Hydrangeas.jpg\" width=\"230\" height=\"182\"/></p>','trt',NULL,3,NULL,'2016-08-17',NULL,0,2,1),(231,'<p><img src=\"http://localhost:9090/images/20160818/1471487952364011678.jpg\" title=\"1471487952364011678.jpg\" alt=\"Koala.jpg\" width=\"601\" height=\"405\"/></p>','了',NULL,3,NULL,'2016-08-18',NULL,1,2,1);
/*!40000 ALTER TABLE `question` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `question_type`
--

DROP TABLE IF EXISTS `question_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `question_type` (
  `qt_id` int(11) NOT NULL AUTO_INCREMENT,
  `type_name` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`qt_id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `question_type`
--

LOCK TABLES `question_type` WRITE;
/*!40000 ALTER TABLE `question_type` DISABLE KEYS */;
INSERT INTO `question_type` VALUES (1,'选择题'),(2,'填空题'),(3,'问答题');
/*!40000 ALTER TABLE `question_type` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2016-11-11 14:04:02
